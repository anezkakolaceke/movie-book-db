import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.MouseEvent;


/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Anezka Kolaceke
 *
 */

public class BookMovieDB extends javax.swing.JFrame implements Database {

    /**
     * Creates new form BookMovieDB
     */

    public BookMovieDB() {
        getWriters();
        getGenresB();
        getEditors();
        getPlaces();
        getStatusB();
        getDirector();
        getLanguage();
        getCountry();
        getSubtitles();
        getGenreF();

        initComponents();
        startManualLayout();

        bookMain.setVisible(true);
        jPanel.setVisible(false);
        showBook.setVisible(false);

        filmMain.setVisible(true);
        addNewFilm.setVisible(false);
        showFilm.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPaneBooks = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        bookMain = new java.awt.Panel();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        titleBook = new javax.swing.JTextField();
        yearBook = new javax.swing.JTextField();
        ratingBook = new javax.swing.JComboBox();
        newBook = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        genreBook = new javax.swing.JComboBox();
        writer = new javax.swing.JComboBox();
        jLabel14 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel12 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox();
        jPanel =  new javax.swing.JPanel();
        Label12 = new javax.swing.JLabel();
        TextField1 = new javax.swing.JTextField();
        Button1 = new javax.swing.JButton();
        Label11 = new javax.swing.JLabel();
        TextField2 = new javax.swing.JTextField();
        TextField3 = new javax.swing.JTextField();
        jabel12 = new javax.swing.JLabel();
        TextField4 = new javax.swing.JTextField();
        jabel13 = new javax.swing.JLabel();
        jomboBox2 = new javax.swing.JComboBox();
        Label14 = new javax.swing.JLabel();
        jutton6 = new javax.swing.JButton();
        jCoboBox3 = new javax.swing.JComboBox();
        jutton7 = new javax.swing.JButton();
        Label15 = new javax.swing.JLabel();
        ComboBox4 = new javax.swing.JComboBox();
        Label16 = new javax.swing.JLabel();
        ComboBox5 = new javax.swing.JComboBox();
        jLbel17 = new javax.swing.JLabel();
        jomboBox6 = new javax.swing.JComboBox();
        jabel18 = new javax.swing.JLabel();
        jTxtField5 = new javax.swing.JTextField();
        jLbel19 = new javax.swing.JLabel();
        backNewBook = new javax.swing.JButton();
        addNewBookB = new javax.swing.JButton();
        cleanNewBook = new javax.swing.JButton();
        jCmboBox7 = new javax.swing.JComboBox();
        jBtton11 = new javax.swing.JButton();
        jLbel20 = new javax.swing.JLabel();
        jButton7 = new javax.swing.JButton();
        showBook = new javax.swing.JPanel();
        panelPicture = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        labTitle = new javax.swing.JLabel();
        labOriginal = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        labWriter = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        labGenreB = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        labYear = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        labEditor = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        labPages = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        labLocal = new javax.swing.JLabel();
        labStatus = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        showComment = new javax.swing.JTextArea();
        labRate = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        showNext = new javax.swing.JButton();
        showBack = new javax.swing.JButton();
        showEdit = new javax.swing.JButton();
        showHome = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        filmMain = new java.awt.Panel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        titleFilm = new javax.swing.JTextField();
        ratingFilm = new javax.swing.JComboBox();
        searchFilmButton = new javax.swing.JButton();
        clearMainFilm = new javax.swing.JButton();
        newFilm = new javax.swing.JButton();
        jCombBox1 = new javax.swing.JComboBox();
        jComboBox3 = new javax.swing.JComboBox();
        jComboBox4 = new javax.swing.JComboBox();
        jLabel34 = new javax.swing.JLabel();
        jComboBox5 = new javax.swing.JComboBox();
        addNewFilm = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        titleNewFilm = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        dirNewFilm = new javax.swing.JComboBox();
        dirButton = new javax.swing.JButton();
        jLabel20 = new javax.swing.JLabel();
        lanNewFilm = new javax.swing.JComboBox();
        lanButton = new javax.swing.JButton();
        jLabel22 = new javax.swing.JLabel();
        olanNewFilm = new javax.swing.JComboBox();
        oLanButton = new javax.swing.JButton();
        jLabel26 = new javax.swing.JLabel();
        counNewFilm = new javax.swing.JComboBox();
        countryButton = new javax.swing.JButton();
        jLabel27 = new javax.swing.JLabel();
        rtNewFilm = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        yearNewFilm = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        subtNewFilm = new javax.swing.JComboBox();
        subtButton = new javax.swing.JButton();
        jLabel31 = new javax.swing.JLabel();
        rateNewFilm = new javax.swing.JComboBox();
        jLabel32 = new javax.swing.JLabel();
        genreNewFilm = new javax.swing.JComboBox();
        GFButton = new javax.swing.JButton();
        jLabel33 = new javax.swing.JLabel();
        posterNewFilm = new javax.swing.JTextField();
        searchFilm = new javax.swing.JButton();
        backNewFilm = new javax.swing.JButton();
        addBNewFilm = new javax.swing.JButton();
        cleanNewFilm = new javax.swing.JButton();
        comf = new javax.swing.JButton();
        showFilm = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        bNextFilm = new javax.swing.JButton();
        bBackFilm = new javax.swing.JButton();
        bEditFilm = new javax.swing.JButton();
        bHomeFilm = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        labTitleF = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        labDir = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        labOLan = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        labCoun = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        labRT = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        labGF = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        labRateF = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        labLan = new javax.swing.JLabel();
        jLabel50 = new javax.swing.JLabel();
        labSubt = new javax.swing.JLabel();
        jLabel52 = new javax.swing.JLabel();
        labYearF = new javax.swing.JLabel();
        jLabel54 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        commentF = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        menuAbout = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Database");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Title:");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Writer:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Genre:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Year:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Rating:");

        ratingBook.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));
        ratingBook.setToolTipText("");

        newBook.setText("Add New");
        newBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newBookActionPerformed(evt);
            }
        });

        jButton2.setText("Search");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Clear");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        genreBook.setModel(resultGenreB);
        genreBook.setToolTipText("");

        writer.setModel(resultWriter);

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel14.setText("Location:");

        jComboBox1.setModel(resultPlace);

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel12.setText("Status:");

        jComboBox2.setModel(resultStatusB);

        javax.swing.GroupLayout bookMainLayout = new javax.swing.GroupLayout(bookMain);
        bookMain.setLayout(bookMainLayout);
        bookMainLayout.setHorizontalGroup(
            bookMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bookMainLayout.createSequentialGroup()
                .addGap(282, 282, 282)
                .addGroup(bookMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bookMainLayout.createSequentialGroup()
                        .addGroup(bookMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(bookMainLayout.createSequentialGroup()
                                .addGroup(bookMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel14)
                                    .addGroup(bookMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING))
                                    .addComponent(jLabel12))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(bookMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(genreBook, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(bookMainLayout.createSequentialGroup()
                                        .addComponent(yearBook, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(jComboBox2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(bookMainLayout.createSequentialGroup()
                                .addGroup(bookMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(bookMainLayout.createSequentialGroup()
                                        .addGap(20, 20, 20)
                                        .addGroup(bookMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(bookMainLayout.createSequentialGroup()
                                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(titleBook, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(bookMainLayout.createSequentialGroup()
                                                .addComponent(jLabel1)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(writer, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGroup(bookMainLayout.createSequentialGroup()
                                        .addGap(17, 17, 17)
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(ratingBook, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(292, 292, 292))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bookMainLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(newBook, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bookMainLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(304, 304, 304))
        );
        bookMainLayout.setVerticalGroup(
            bookMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bookMainLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(newBook, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addGroup(bookMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(titleBook, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(bookMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bookMainLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(23, 23, 23)
                        .addGroup(bookMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(bookMainLayout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addGroup(bookMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(yearBook)
                                    .addComponent(jLabel4)))
                            .addComponent(genreBook, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(bookMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(bookMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(writer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(bookMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ratingBook, javax.swing.GroupLayout.Alignment.LEADING))
                .addGap(18, 18, 18)
                .addGroup(bookMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(64, Short.MAX_VALUE))
        );

        Label12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Label12.setText("Cover:");

        Button1.setText("Search");
        Button1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button1ActionPerformed(evt);
            }
        });

        Label11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Label11.setText("Title:");

        jabel12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jabel12.setText("Original Title:");

        jabel13.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jabel13.setText("Year:");

        jomboBox2.setModel(resultWriter);

        Label14.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Label14.setText("Writer:");

        jutton6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jutton6.setText("+");
        jutton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jutton6ActionPerformed(evt);
            }
        });

        jCoboBox3.setModel(resultEditor);

        jutton7.setText("+");
        jutton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jutton7ActionPerformed(evt);
            }
        });

        Label15.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Label15.setText("Editor:");

        ComboBox4.setModel(resultStatusB);

        Label16.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Label16.setText("Status:");

        ComboBox5.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));

        jLbel17.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLbel17.setText("Rating:");

        jomboBox6.setModel(resultPlace);

        jabel18.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jabel18.setText("Local:");

        jLbel19.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLbel19.setText("Pages:");

        backNewBook.setText("BACK");
        backNewBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backNewBookActionPerformed(evt);
            }
        });

        addNewBookB.setText("ADD");
        addNewBookB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addNewBookBActionPerformed(evt);
            }
        });

        cleanNewBook.setText("CLEAR");
        cleanNewBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cleanNewBookActionPerformed(evt);
            }
        });

        jCmboBox7.setModel(resultGenreB);

        jBtton11.setText("+");
        jBtton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtton11ActionPerformed(evt);
            }
        });

        jLbel20.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLbel20.setText("Genre:");

        jButton7.setText("Add Comment");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelLayout = new javax.swing.GroupLayout(jPanel);
        jPanel.setLayout(jPanelLayout);
        jPanelLayout.setHorizontalGroup(
            jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelLayout.createSequentialGroup()
                .addGap(181, 181, 181)
                .addComponent(Label12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Button1)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelLayout.createSequentialGroup()
                .addContainerGap(531, Short.MAX_VALUE)
                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelLayout.createSequentialGroup()
                        .addComponent(cleanNewBook, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(242, 242, 242))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelLayout.createSequentialGroup()
                        .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(154, 154, 154))))
            .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanelLayout.createSequentialGroup()
                    .addGap(144, 144, 144)
                    .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanelLayout.createSequentialGroup()
                            .addGap(88, 88, 88)
                            .addComponent(backNewBook, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(54, 54, 54)
                            .addComponent(addNewBookB, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanelLayout.createSequentialGroup()
                            .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(Label11)
                                .addComponent(jabel12)
                                .addComponent(Label14)
                                .addComponent(Label15)
                                .addComponent(jabel13)
                                .addComponent(jLbel19))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelLayout.createSequentialGroup()
                                        .addComponent(jomboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jutton6))
                                    .addComponent(TextField3, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(TextField2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanelLayout.createSequentialGroup()
                                    .addComponent(jCoboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jutton7))
                                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jTxtField5, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(TextField4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(jPanelLayout.createSequentialGroup()
                            .addGap(33, 33, 33)
                            .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(Label16)
                                .addComponent(jLbel17)
                                .addComponent(jabel18)
                                .addComponent(jLbel20))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(ComboBox5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jomboBox6, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanelLayout.createSequentialGroup()
                                    .addComponent(jCmboBox7, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jBtton11))
                                .addComponent(ComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addContainerGap(326, Short.MAX_VALUE)))
        );
        jPanelLayout.setVerticalGroup(
            jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelLayout.createSequentialGroup()
                .addContainerGap(212, Short.MAX_VALUE)
                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(92, 92, 92)
                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Label12)
                    .addComponent(TextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Button1))
                .addGap(34, 34, 34)
                .addComponent(cleanNewBook, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(124, 124, 124))
            .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanelLayout.createSequentialGroup()
                    .addGap(54, 54, 54)
                    .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(TextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(Label11))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(TextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jabel12))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jomboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(Label14)
                        .addComponent(jutton6))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jCoboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jutton7)
                        .addComponent(Label15))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(TextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jabel13))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTxtField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLbel19))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(ComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(Label16))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(ComboBox5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLbel17))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jomboBox6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jabel18))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jCmboBox7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jBtton11)
                        .addComponent(jLbel20))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 79, Short.MAX_VALUE)
                    .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(addNewBookB, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                        .addComponent(backNewBook, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGap(121, 121, 121)))
        );

        showBook.setAlignmentX(0.0F);
        showBook.setAlignmentY(0.0F);
        showBook.setAutoscrolls(true);
        showBook.setPreferredSize(new java.awt.Dimension(830, 454));

        panelPicture.setMaximumSize(new java.awt.Dimension(166, 197));
        panelPicture.setName(""); // NOI18N
        panelPicture.setPreferredSize(new java.awt.Dimension(166, 197));

        javax.swing.GroupLayout panelPictureLayout = new javax.swing.GroupLayout(panelPicture);
        panelPicture.setLayout(panelPictureLayout);
        panelPictureLayout.setHorizontalGroup(
            panelPictureLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        panelPictureLayout.setVerticalGroup(
            panelPictureLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 197, Short.MAX_VALUE)
        );

        labTitle.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        labTitle.setText("Title");

        labOriginal.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        labOriginal.setText("Original Title");

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel13.setText("Writer:");

        labWriter.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        labWriter.setText("Writer Name");

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel15.setText("Genre:");

        labGenreB.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        labGenreB.setText("Genre Name");

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel17.setText("Year:");

        labYear.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        labYear.setText("XXXX");

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel19.setText("Editor:");

        labEditor.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        labEditor.setText("Editor Name");

        jLabel21.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel21.setText("Pages:");

        labPages.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        labPages.setText("Number");

        jLabel23.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel23.setText("Rating:");

        jLabel24.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel24.setText("Localization:");

        jLabel25.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel25.setText("Status:");

        labLocal.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        labLocal.setText("Name");

        labStatus.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        labStatus.setText("Status");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 251, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 39, Short.MAX_VALUE)
        );

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel11.setText("Comments:");

        showComment.setColumns(20);
        showComment.setRows(5);
        showComment.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        showComment.setEnabled(false);
        jScrollPane1.setViewportView(showComment);

        labRate.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        labRate.setText("Rate");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labTitle)
                    .addComponent(labOriginal)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addGap(277, 277, 277)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 502, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labGenreB))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel21)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labPages))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labWriter))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel17)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labYear))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel19)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labEditor)))
                        .addGap(141, 141, 141)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel25)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labStatus))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel24)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labLocal))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel23)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labRate)))))
                .addContainerGap(69, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(labTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labOriginal)
                .addGap(27, 27, 27)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labWriter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labRate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(labGenreB))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(labYear)
                    .addComponent(jLabel24)
                    .addComponent(labLocal))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(labEditor)
                    .addComponent(jLabel25)
                    .addComponent(labStatus))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(labPages))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(123, Short.MAX_VALUE))
        );

        showNext.setText("NEXT");

        showBack.setText("BACK");

        showEdit.setText("EDIT");

        showHome.setText("HOME");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(showHome, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(showEdit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(showBack, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(showNext, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(35, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addComponent(showNext, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(showBack, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(showEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(showHome, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(125, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout showBookLayout = new javax.swing.GroupLayout(showBook);
        showBook.setLayout(showBookLayout);
        showBookLayout.setHorizontalGroup(
            showBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(showBookLayout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(showBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelPicture, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(84, Short.MAX_VALUE))
        );
        showBookLayout.setVerticalGroup(
            showBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(showBookLayout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(panelPicture, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, showBookLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 987, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                    .addContainerGap(62, Short.MAX_VALUE)
                    .addComponent(jPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(62, Short.MAX_VALUE)))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(bookMain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(154, Short.MAX_VALUE)))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(showBook, javax.swing.GroupLayout.DEFAULT_SIZE, 987, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 555, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(bookMain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(51, Short.MAX_VALUE)))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addComponent(showBook, javax.swing.GroupLayout.PREFERRED_SIZE, 555, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        jTabbedPaneBooks.addTab("Books", jPanel2);

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Title:");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Director:");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("Language:");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("Genre:");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel10.setText("Rating:");

        ratingFilm.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));

        searchFilmButton.setText("Search");

        clearMainFilm.setText("Clear");

        newFilm.setText("Add New");

        jCombBox1.setModel(resultGenreF);

        jComboBox3.setModel(resultDirector);

        jComboBox4.setModel(resultLanguage);

        jLabel34.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel34.setText("Country:");

        jComboBox5.setModel(resultCountry);

        javax.swing.GroupLayout filmMainLayout = new javax.swing.GroupLayout(filmMain);
        filmMain.setLayout(filmMainLayout);
        filmMainLayout.setHorizontalGroup(
            filmMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, filmMainLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(newFilm, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(58, 58, 58))
            .addGroup(filmMainLayout.createSequentialGroup()
                .addGroup(filmMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(filmMainLayout.createSequentialGroup()
                        .addGap(256, 256, 256)
                        .addGroup(filmMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel34)
                            .addGroup(filmMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(filmMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBox3, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBox5, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(titleFilm)
                            .addComponent(jCombBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(filmMainLayout.createSequentialGroup()
                                .addGroup(filmMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ratingFilm, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(filmMainLayout.createSequentialGroup()
                        .addGap(333, 333, 333)
                        .addComponent(searchFilmButton, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(clearMainFilm, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 279, Short.MAX_VALUE))
        );
        filmMainLayout.setVerticalGroup(
            filmMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, filmMainLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(newFilm, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addGroup(filmMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(filmMainLayout.createSequentialGroup()
                        .addGroup(filmMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(titleFilm)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addGroup(filmMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(filmMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(filmMainLayout.createSequentialGroup()
                                .addComponent(jComboBox4)
                                .addGap(2, 2, 2))
                            .addComponent(jLabel8))
                        .addGap(40, 40, 40))
                    .addGroup(filmMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jCombBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel9)))
                .addGap(14, 14, 14)
                .addGroup(filmMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ratingFilm, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(filmMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel34)
                    .addComponent(jComboBox5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(filmMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchFilmButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clearMainFilm, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(129, 129, 129))
        );

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel16.setText("Title:");

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel18.setText("Director:");

        dirNewFilm.setModel(resultDirector);

        dirButton.setText("+");

        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel20.setText("Language:");

        lanNewFilm.setModel(resultLanguage);

        lanButton.setText("+");

        jLabel22.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel22.setText("Original Language:");

        olanNewFilm.setModel(resultOLanguage);

        oLanButton.setText("+");

        jLabel26.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel26.setText("Country:");

        counNewFilm.setModel(resultCountry);

        countryButton.setText("+");

        jLabel27.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel27.setText("Running Time:");

        jLabel28.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel28.setText("min");

        jLabel29.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel29.setText("Year:");

        jLabel30.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel30.setText("Subtitles:");

        subtNewFilm.setModel(resultSubtitles);

        subtButton.setText("+");

        jLabel31.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel31.setText("Rating:");

        rateNewFilm.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));

        jLabel32.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel32.setText("Genre:");

        genreNewFilm.setModel(resultGenreF);

        GFButton.setText("+");

        jLabel33.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel33.setText("Poster:");

        searchFilm.setText("Search");

        backNewFilm.setText("BACK");

        addBNewFilm.setText("ADD");

        cleanNewFilm.setText("CLEAR");

        comf.setText("Add Comment");

        javax.swing.GroupLayout addNewFilmLayout = new javax.swing.GroupLayout(addNewFilm);
        addNewFilm.setLayout(addNewFilmLayout);
        addNewFilmLayout.setHorizontalGroup(
            addNewFilmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addNewFilmLayout.createSequentialGroup()
                .addGroup(addNewFilmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addNewFilmLayout.createSequentialGroup()
                        .addGap(294, 294, 294)
                        .addComponent(backNewFilm, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(addBNewFilm, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(cleanNewFilm, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(addNewFilmLayout.createSequentialGroup()
                        .addGap(186, 186, 186)
                        .addGroup(addNewFilmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel33)
                            .addComponent(jLabel32)
                            .addComponent(jLabel31)
                            .addComponent(jLabel30)
                            .addComponent(jLabel29)
                            .addComponent(jLabel27)
                            .addComponent(jLabel26)
                            .addComponent(jLabel22)
                            .addComponent(jLabel20)
                            .addComponent(jLabel18)
                            .addComponent(jLabel16))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(addNewFilmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(addNewFilmLayout.createSequentialGroup()
                                .addGroup(addNewFilmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(yearNewFilm, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(rtNewFilm, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel28)
                                .addGap(210, 210, 210)
                                .addComponent(comf, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(rateNewFilm, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(addNewFilmLayout.createSequentialGroup()
                                .addGroup(addNewFilmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(titleNewFilm, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(posterNewFilm, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, addNewFilmLayout.createSequentialGroup()
                                        .addGroup(addNewFilmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(genreNewFilm, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(subtNewFilm, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(counNewFilm, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(olanNewFilm, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(lanNewFilm, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(dirNewFilm, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(addNewFilmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(dirButton)
                                            .addComponent(lanButton)
                                            .addComponent(oLanButton)
                                            .addComponent(countryButton)
                                            .addComponent(subtButton)
                                            .addComponent(GFButton))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(searchFilm)))))
                .addContainerGap(208, Short.MAX_VALUE))
        );
        addNewFilmLayout.setVerticalGroup(
            addNewFilmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addNewFilmLayout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addGroup(addNewFilmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(titleNewFilm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(addNewFilmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(dirNewFilm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dirButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(addNewFilmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(lanNewFilm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lanButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(addNewFilmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(olanNewFilm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(oLanButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(addNewFilmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26)
                    .addComponent(counNewFilm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(countryButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(addNewFilmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addNewFilmLayout.createSequentialGroup()
                        .addGroup(addNewFilmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel27)
                            .addComponent(rtNewFilm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel28))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(addNewFilmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel29)
                            .addComponent(yearNewFilm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addNewFilmLayout.createSequentialGroup()
                        .addComponent(comf)
                        .addGap(30, 30, 30)))
                .addGroup(addNewFilmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel30)
                    .addComponent(subtNewFilm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(subtButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(addNewFilmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel31)
                    .addComponent(rateNewFilm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(addNewFilmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel32)
                    .addComponent(genreNewFilm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(GFButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(addNewFilmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel33)
                    .addComponent(posterNewFilm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchFilm))
                .addGap(18, 18, 18)
                .addGroup(addNewFilmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(backNewFilm, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                    .addComponent(cleanNewFilm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addBNewFilm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(92, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 220, Short.MAX_VALUE)
        );

        bNextFilm.setText("NEXT");

        bBackFilm.setText("BACK");

        bEditFilm.setText("EDIT");

        bHomeFilm.setText("HOME");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(bHomeFilm, javax.swing.GroupLayout.DEFAULT_SIZE, 106, Short.MAX_VALUE)
                    .addComponent(bEditFilm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(bBackFilm, javax.swing.GroupLayout.DEFAULT_SIZE, 106, Short.MAX_VALUE)
                    .addComponent(bNextFilm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(40, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(bNextFilm, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(bBackFilm, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(bEditFilm, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(bHomeFilm, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
                .addContainerGap())
        );

        labTitleF.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        labTitleF.setText("TITLE");

        jLabel36.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel36.setText("Director:");

        labDir.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        labDir.setText("Director Name");

        jLabel38.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel38.setText("Original Language:");

        labOLan.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        labOLan.setText("Language");

        jLabel40.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel40.setText("Country:");

        labCoun.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        labCoun.setText("Name Country");

        jLabel42.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel42.setText("Running time:");

        labRT.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        labRT.setText("XXX min");

        jLabel44.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel44.setText("Genre:");

        labGF.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        labGF.setText("Genre");

        jLabel46.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel46.setText("Rating:");

        labRateF.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        labRateF.setText("XX/10");

        jLabel48.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel48.setText("File Language:");

        labLan.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        labLan.setText("Language");

        jLabel50.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel50.setText("Subtitles:");

        labSubt.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        labSubt.setText("Subtitles");

        jLabel52.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel52.setText("Year:");

        labYearF.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        labYearF.setText("XXXX");

        jLabel54.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel54.setText("Comments");

        jScrollPane2.setEnabled(false);

        commentF.setColumns(20);
        commentF.setRows(5);
        commentF.setEnabled(false);
        jScrollPane2.setViewportView(commentF);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 503, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel54)
                    .addComponent(labTitleF)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel52)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labYearF))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addComponent(jLabel38)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labOLan))
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addComponent(jLabel36)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labDir))
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addComponent(jLabel40)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labCoun))
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addComponent(jLabel42)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labRT))
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addComponent(jLabel44)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labGF)))
                        .addGap(132, 132, 132)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addComponent(jLabel50)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labSubt))
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addComponent(jLabel48)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labLan))
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addComponent(jLabel46)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labRateF)))))
                .addContainerGap(188, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(labTitleF)
                .addGap(48, 48, 48)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel36)
                    .addComponent(labDir))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel38)
                            .addComponent(labOLan))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel40)
                            .addComponent(labCoun))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel42)
                            .addComponent(labRT))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel44)
                            .addComponent(labGF)))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel46)
                            .addComponent(labRateF))
                        .addGap(39, 39, 39)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel48)
                            .addComponent(labLan))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel50)
                            .addComponent(labSubt))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel52)
                    .addComponent(labYearF))
                .addGap(30, 30, 30)
                .addComponent(jLabel54)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2)
                .addContainerGap())
        );

        javax.swing.GroupLayout showFilmLayout = new javax.swing.GroupLayout(showFilm);
        showFilm.setLayout(showFilmLayout);
        showFilmLayout.setHorizontalGroup(
            showFilmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(showFilmLayout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(showFilmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        showFilmLayout.setVerticalGroup(
            showFilmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(showFilmLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(showFilmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(showFilmLayout.createSequentialGroup()
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(59, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(addNewFilm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(0, 72, Short.MAX_VALUE)
                    .addComponent(filmMain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 72, Short.MAX_VALUE)))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(showFilm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(addNewFilm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(0, 7, Short.MAX_VALUE)
                    .addComponent(filmMain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 7, Short.MAX_VALUE)))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(showFilm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPaneBooks.addTab("Films", jPanel1);

        jMenu1.setText("File");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem1.setText("Exit");
        jMenuItem1.setToolTipText("");
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Help");

        menuAbout.setText("About");
        menuAbout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuAboutActionPerformed(evt);
            }
        });
        jMenu2.add(menuAbout);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPaneBooks)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPaneBooks)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        titleBook.setText("");
        writer.setSelectedIndex(0);
        genreBook.setSelectedIndex(0);
        yearBook.setText("");
        ratingBook.setSelectedIndex(0);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void startManualLayout(){
        showHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showHomeActionPerformed(evt);
            }
        });

        showNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showNextActionPerformed(evt);
            }
        });

        showBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showBackActionPerformed(evt);
            }
        });

        showEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showEditActionPerformed(evt);
            }
        });

        ok1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ok1ActionPerformed(evt);
            }
        });

        cancel1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancel1ActionPerformed(evt);
            }
        });

        ok2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ok2ActionPerformed(evt);
            }
        });

        cancel2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancel2ActionPerformed(evt);
            }
        });

        ok3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ok3ActionPerformed(evt);
            }
        });

        cancel3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancel3ActionPerformed(evt);
            }
        });

        ok4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ok4ActionPerformed(evt);
            }
        });

        cancel4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancel4ActionPerformed(evt);
            }
        });

        newFilm.addActionListener(new java.awt.event.ActionListener(){
            public void actionPerformed(java.awt.event.ActionEvent evt){
                newFilmActionPerformed(evt);
            }
        });

        backNewFilm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                backNewFilmActionPerformed(evt);
            }
        });

        addBNewFilm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(ActionEvent e) {
                addBNewFilmActionPerformed(e);
            }
        });

        cleanNewFilm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(ActionEvent e) {
                cleanNewFilmActionPerformed(e);
            }
        });

        searchFilm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(ActionEvent e) {
                searchFilmActionPerformed(e);
            }
        });

        dirButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(ActionEvent e) {
                dirActionPerformed(e);
            }
        });

        okDir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(ActionEvent e) {
                okDirActionPerformed(e);
            }
        });

        cancelDir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(ActionEvent e) {
                cancelDirActionPerformed(e);
            }
        });

        lanButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(ActionEvent e) {
                lanButtonActionPerformed(e);
            }
        });

        okLan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(ActionEvent e) {
                okLanActionPerformed(e);
            }
        });

        cancelLan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(ActionEvent e) {
                cancelLanActionPerformed(e);
            }
        });

        oLanButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(ActionEvent e) {
                lanButtonActionPerformed(e);
            }
        });

        countryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(ActionEvent e) {
                countryButtonActionPerformed(e);
            }
        });

        okCoun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(ActionEvent e) {
                okCounActionPerformed(e);
            }
        });

        cancelCoun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(ActionEvent e) {
                cancelCounActionPerformed(e);
            }
        });

        subtButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(ActionEvent e) {
                subtButtonActionPerformed(e);
            }
        });

        okSubt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(ActionEvent e) {
                okSubtActionPerformed(e);
            }
        });

        cancelSubt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(ActionEvent e) {
                cancelSubtActionPerformed(e);
            }
        });

        GFButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(ActionEvent e) {
                GFButtonActionPerformed(e);
            }
        });

        okGF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(ActionEvent e) {
                okGFActionPerformed(e);
            }
        });

        cancelGF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(ActionEvent e) {
                cancelGFActionPerformed(e);
            }
        });

        clearMainFilm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(ActionEvent e) {
                clearMainFilmAction(e);
            }
        });

        searchFilmButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(ActionEvent e) {
                searchFilm(e);
            }
        });

        bBackFilm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(ActionEvent e) {
                backFilmAction(e);
            }
        });

        bNextFilm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(ActionEvent e) {
                nextFilmAction(e);
            }
        });

        bHomeFilm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(ActionEvent e) {
                homeFilmAction(e);
            }
        });

        bEditFilm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(ActionEvent e) {
                editFilmAction(e);
            }
        });

        comf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(ActionEvent e) {
                addCommentFilm(e);
            }
        });

        okF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(ActionEvent e) {
                okFListener(e);
            }
        });

        cancelF.addActionListener(new java.awt.event.ActionListener(){
            public void actionPerformed(ActionEvent e){
                cancelFListener(e);
            }
        });

        editItem.addActionListener(new java.awt.event.ActionListener(){
            public void actionPerformed(ActionEvent e){
                editItemAction(e);
            }
        });

        cancelItem.addActionListener(new java.awt.event.ActionListener(){
            public void actionPerformed(ActionEvent e){
                cancelItemAction(e);
            }
        });

        editSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(ActionEvent e) {
                searchEditAction(e);
            }
        });

        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(ActionEvent e) {
                updateFilm(e);
            }
        });

        cancelUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(ActionEvent e) {
                cancelUpdateFilm(e);
            }
        });

        editItemb.addActionListener(new java.awt.event.ActionListener(){
            public void actionPerformed(ActionEvent e){
                editItembAction(e);
            }
        });

        cancelItemb.addActionListener(new java.awt.event.ActionListener(){
            public void actionPerformed(ActionEvent e){
                cancelItembAction(e);
            }
        });

        editSearchb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(ActionEvent e) {
                searchEditbAction(e);
            }
        });

        updateb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(ActionEvent e) {
                updateBook(e);
            }
        });

        cancelUpdateb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(ActionEvent e) {
                cancelUpdateBook(e);
            }
        });
    }




    /**
     * Methods to consult database and create lists which are used to insert itens
     * in the JComboBox.
     */

    public void getWriters(){
        String resultW[];

        resultW=db.consultarDadosWriter(url, driver, usuario, senha, "writer");
        String listW[]=new String[1+resultW.length];
        listW[0]="Select Writer";
        if(resultW[0]!=""){
            for(int i=0; i<resultW.length;i++){
                listW[1+i]=resultW[i];
            }
            resultWriter= new DefaultComboBoxModel(listW);
        }
    }

    public void getGenresB(){
        String resultGB[];

        resultGB=db.consultarDadosGenreB(url, driver, usuario, senha, "genreb");
        String listGB[]=new String[1+resultGB.length];
        listGB[0]="Select Genre";
        if(resultGB[0]!=""){
            for(int i=0; i<resultGB.length;i++){
                listGB[1+i]=resultGB[i];
            }
            resultGenreB= new DefaultComboBoxModel(listGB);
        }
    }

    public void getEditors(){
        String resultE[];

        resultE=db.consultarDadosEditor(url, driver, usuario, senha, "editor");
        String listE[]=new String[1+resultE.length];
        listE[0]="Select Editor";
        if(resultE[0]!=""){
            for(int i=0; i<resultE.length;i++){
                listE[1+i]=resultE[i];
            }
            resultEditor= new DefaultComboBoxModel(listE);
        }
    }

    public void getPlaces(){
        String resultP[];

        resultP=db.consultarDadosPlace(url, driver, usuario, senha, "place");
        String listP[]=new String[1+resultP.length];
        listP[0]="Select Place";
        if(resultP[0]!=""){
            for(int i=0; i<resultP.length;i++){
                listP[1+i]=resultP[i];
            }
            resultPlace= new DefaultComboBoxModel(listP);
        }
    }

    public void getStatusB(){
        String resultSB[];

        resultSB=db.consultarDadosStatusB(url, driver, usuario, senha, "statusb");
        String listSB[]=new String[1+resultSB.length];
        listSB[0]="Select Status";
        if(resultSB[0]!=""){
            for(int i=0; i<resultSB.length;i++){
                listSB[1+i]=resultSB[i];
            }
            resultStatusB= new DefaultComboBoxModel(listSB);
        }
    }

    public void getDirector(){
        String resultD[];

        resultD=db.consultarDados(url, driver, usuario, senha, "director", "nm_director");
        String listD[]=new String[1+resultD.length];
        listD[0]="Select Director";
        if(resultD[0]!=""){
            for(int i=0; i<resultD.length;i++){
                listD[1+i]=resultD[i];
            }
            resultDirector= new DefaultComboBoxModel(listD);
        }
    }

    public void getLanguage(){
        String resultL[];

        resultL=db.consultarDados(url, driver, usuario, senha, "languages", "nm_lan");
        String listL[]=new String[1+resultL.length];
        listL[0]="Select Language";
        if(resultL[0]!=""){
            for(int i=0; i<resultL.length;i++){
                listL[1+i]=resultL[i];
            }
            resultLanguage= new DefaultComboBoxModel(listL);
            resultOLanguage= new DefaultComboBoxModel(listL);
        }
    }

    public void getCountry(){
        String resultC[];

        resultC=db.consultarDados(url, driver, usuario, senha, "country", "nm_country");
        String listC[]=new String[1+resultC.length];
        listC[0]="Select Country";
        if(resultC[0]!=""){
            for(int i=0; i<resultC.length;i++){
                listC[1+i]=resultC[i];
            }
            resultCountry= new DefaultComboBoxModel(listC);
        }
    }

    public void getSubtitles(){
        String resultSt[];

        resultSt=db.consultarDados(url, driver, usuario, senha, "subtitle", "nm_subt");
        String listSt[]=new String[resultSt.length];
        if(resultSt[0]!=""){
            for(int i=0; i<resultSt.length;i++){
                listSt[i]=resultSt[i];
            }
            resultSubtitles= new DefaultComboBoxModel(listSt);
        }
    }

    public void getGenreF(){
        String resultGF[];

        resultGF=db.consultarDados(url, driver, usuario, senha, "genref", "nm_genref");
        String listGF[]=new String[1+resultGF.length];
        listGF[0]="Select Genre";
        if(resultGF[0]!=""){
            for(int i=0; i<resultGF.length;i++){
                listGF[i+1]=resultGF[i];
            }
            resultGenreF= new DefaultComboBoxModel(listGF);
        }
    }




    /*
     * Methods that make the software show the image for cover/poster
     * paint overrides the Graphic method and is used to set position and size
     * Image is shown when variable showImage is set true
     */

    protected ImageIcon createImageIcon(String path,String description) {
        java.io.File file = new java.io.File(path);
        if (file.exists()) {
            ImageIcon icon=new ImageIcon(path, description);
            image=icon.getImage();
            imageObserver=icon.getImageObserver();
            return icon;

        } else {
            System.err.println("Couldn't find file: " + path);
            showImage=false;
            return null;
        }
    }

    void setIcon(ImageIcon icon) {
      image = icon.getImage();
      imageObserver = icon.getImageObserver();
    }

    @Override
    public void paint( Graphics g ) {
       super.paint( g );
       if(showImage)
           g.drawImage(image, 70 , 160 , 150 , 210 , imageObserver);
    }




    /*
     * METHODS RELATED TO FILMS!!!!
     */

    // adds a film to database when ADD is pressed in "Add New Book" screen

    // <MAIN FILM> searchFilm gets the parameter inserted in the main page when "Search" is pressed
    // it executes showDataFilms once gatting the parameter value.
    private void searchFilm(java.awt.event.ActionEvent evt){

        showImage=false;
        repaint();

        if(!titleFilm.getText().isEmpty()){
            tFilm=titleFilm.getText();
            System.out.println("TITLE");
            titleF=true;
        }
        else{
            titleF=false;
        }

        if(jComboBox3.getSelectedIndex()!=0){
            dFilm=jComboBox3.getSelectedItem().toString();
            System.out.println("DIRECTOR");
            dirF=true;
        }
        else{
            dirF=false;
        }

        if(jCombBox1.getSelectedIndex()!=0){
            gFilm=jCombBox1.getSelectedItem().toString();
            System.out.println("GENRE");
            genreF=true;
        }
        else{
            genreF=false;
        }

        if(jComboBox4.getSelectedIndex()!=0){
            lFilm=jComboBox4.getSelectedItem().toString();
            System.out.println("LANGUAGE");
            languageF=true;
        }
        else{
            languageF=false;
            System.out.println("LANGUAGE_FALSE");
        }

        if(jComboBox5.getSelectedIndex()!=0){
            cFilm=jComboBox5.getSelectedItem().toString();
            System.out.println("COUNTRY");
            countryF=true;
        }
        else{
            countryF=false;
        }

        rFilm=ratingFilm.getSelectedItem().toString();
        rateFilm=true;

        nextF=0;
        showMessage=true;

        titleFilm.setText("");
        jComboBox3.setSelectedIndex(0);
        jCombBox1.setSelectedIndex(0);
        jComboBox4.setSelectedIndex(0);
        jComboBox5.setSelectedIndex(0);
        ratingFilm.setSelectedIndex(0);

        if(!showDataFilms(nextF))
            JOptionPane.showMessageDialog(this, "Sorry,no results for this search. =(", "Error", JOptionPane.ERROR_MESSAGE);
    }

    // <MAIN FILM> clear all the fields in the <MAIN FILM> screen
    private void clearMainFilmAction(java.awt.event.ActionEvent evt){
        titleFilm.setText("");
        jComboBox3.setSelectedIndex(0);
        jComboBox4.setSelectedIndex(0);
        jCombBox1.setSelectedIndex(0);
        ratingFilm.setSelectedIndex(0);
        jComboBox5.setSelectedIndex(0);
    }

    // <SHOW FILMS> show the films in the database which corresponds to the parameter chosen in the main page
    private boolean showDataFilms(int i){

        String result[][]=new String[1000][1000];

        if(titleF){
            result=db.consultFilms(url, driver, usuario, senha, "nm_film", tFilm);
            rateFilm=false;
        }
        if(dirF){
            result=db.consultFilms(url, driver, usuario, senha, "dir_film",db.consultDirector(url, driver, usuario, senha, dFilm));
            rateFilm=false;
        }
        if(genreF){
            result=db.consultFilms(url, driver, usuario, senha, "genref",db.consultGenreF(url, driver, usuario, senha, gFilm));
            System.out.println("DRA-GENRE");
            rateFilm=false;
        }
        if(languageF){
            result=db.consultFilms(url, driver, usuario, senha, "lan_film", db.consultLanguage(url, driver, usuario, senha, lFilm));
            System.out.println("DRA-LAN");

            rateFilm=false;
        }
        if(countryF){
            result=db.consultFilms(url, driver, usuario, senha, "country",db.consultCountry(url, driver, usuario, senha, cFilm));
            rateFilm=false;
        }
        if(rateFilm){
            result=db.consultFilms(url, driver, usuario, senha, "rating",rFilm);
        }
        if(showMessage&&result.length!=0)
            JOptionPane.showMessageDialog(this, result.length+" result(s) found!", "=)", JOptionPane.INFORMATION_MESSAGE);

        showMessage=false;

        if(result.length>i){

        if(result[i][10]!=""){
            showImage=true;
            createImageIcon("C:\\Users\\grad-student\\Desktop\\Project\\Database\\src\\pictures\\films\\"+result[i][10], "POSTER");
        }else{
            showImage=false;
        }

        labTitleF.setText(result[i][0]);
        nameFilm=result[i][0];
        labDir.setText(db.consultDirector2(url, driver, usuario, senha, result[i][1]));
        directorFilm=result[i][1];
        labOLan.setText(db.consultLanguage2(url, driver, usuario, senha, result[i][3]));
        labCoun.setText(db.consultCountry2(url, driver, usuario, senha, result[i][4]));
        labRT.setText(result[i][5]+" min");
        labGF.setText(db.consultGenreF2(url, driver, usuario, senha, result[i][9]));
        labYearF.setText(result[i][7]);
        labLan.setText(db.consultLanguage2(url, driver, usuario, senha, result[i][2]));
        labSubt.setText(db.consultSubtitles2(url, driver, usuario, senha, result[i][8]));
        labRateF.setText(result[i][6]+"/10");

        /*
        String id_book=db.getBookID(url, driver, usuario, senha,"select * from books where nm_book='"+result[i][0]+"' AND wr_book='"+result[i][2]+"';");
        showComment.setText(db.consultComment(url, driver, usuario, senha,id_book));
        if(showComment.getText().equals(labStatus.getText())||showComment.getText().equals(labOriginal.getText()))
            showComment.setText("");
        */
        String id_film=db.getFilmID(url, driver, usuario, senha,"select * from films where nm_film='"+result[i][0]+"' AND dir_film='"+result[i][1]+"';");

        commentF.setText(db.consultCommentF(url, driver, usuario, senha,id_film));
        if(commentF.getText().equals(labRateF.getText())||commentF.getText().equals(labSubt.getText()))
            commentF.setText("");

        repaint();

        filmMain.setVisible(false);
        showFilm.setVisible(true);
        addNewFilm.setVisible(false);

        return true;
        }else return false;

    }


    // <SHOW FILMS> shows the next result for search when NEXT is pressed.
    private void nextFilmAction(java.awt.event.ActionEvent evt){
        nextF++;
        System.out.println("Show result #"+nextF);
        if(!showDataFilms(nextF)){
            JOptionPane.showMessageDialog(this, "There is no more results for your search", "Error", JOptionPane.INFORMATION_MESSAGE);
            nextF--;
            repaint();
        }
    }

    // <SHOW FILMS> shows the previous result for search when BACK is pressed
    private void backFilmAction(java.awt.event.ActionEvent evt){
        nextF--;
        if(nextF<0){
            JOptionPane.showMessageDialog(this, "There is no more results for your search", "Error", JOptionPane.INFORMATION_MESSAGE);
            nextF=0;
            repaint();
            return;
        }
        if(!showDataFilms(nextF)){
            JOptionPane.showMessageDialog(this, "There is no more results for your search", "Error", JOptionPane.INFORMATION_MESSAGE);
            nextF++;
            return;
        }
    }

    // <SHOW FILMS> returns to the <MAIN FILM> when HOME is pressed
    private void homeFilmAction(java.awt.event.ActionEvent evt){
        filmMain.setVisible(true);
        showFilm.setVisible(false);
        addNewFilm.setVisible(false);
        showImage=false;
        repaint();
    }

    // <SHOW FILMS> opens window where the parameter to be changed can be chosen
    // when EDIT is pressed.
    private void editFilmAction(java.awt.event.ActionEvent evt){

        editFilm = new JFrame();
        editFilm.setBounds(250,150,300,150);
        JPanel pan=new JPanel();
        pan.setLayout(new BoxLayout(pan,BoxLayout.Y_AXIS));

        String[] itens={"Title","Director", "Language", "Original Language", "Country", "Running Time", "Year", "Subtitles", "Rating", "Genre", "Poster", "Comment"};

        item=new JComboBox(itens);
        item.setPreferredSize(new Dimension(250,10));

        JPanel intPan=new JPanel();

        intPan.add(editItem);
        intPan.add(cancelItem);

        JLabel lab=new JLabel("Choose the item to be modified");
        lab.setAlignmentX(Component.CENTER_ALIGNMENT);
        item.setAlignmentX(Component.CENTER_ALIGNMENT);
        intPan.setAlignmentX(Component.CENTER_ALIGNMENT);

        pan.add(lab);
        pan.add(item);
        pan.add(intPan);

        editFilm.add(pan);

        editFilm.setVisible(true);
        editFilm.toFront();
    }

    // <SHOW FILMS> when CANCEL is pressed, closes the window to edit information about film
    private void cancelItemAction(java.awt.event.ActionEvent evt){
        editFilm.dispose();
    }

    // <SHOW FILMS> gets the parameter to be changed and creates a window where the value for
    // that parameter can be inserted when Update is pressed.
    private void editItemAction(java.awt.event.ActionEvent evt){
        par="";

        System.out.println(item.getSelectedIndex());

        updateValue=new JFrame();
        updateValue.setBounds(250,150,300,150);

        JLabel lab=new JLabel();
        lab.setAlignmentX(Component.CENTER_ALIGNMENT);
        combo=new JComboBox();
        combo.setAlignmentX(Component.CENTER_ALIGNMENT);
        text=new JTextField();
        text.setAlignmentX(Component.CENTER_ALIGNMENT);
        area=new JTextArea();
        area.setAlignmentX(Component.CENTER_ALIGNMENT);

        JPanel botton=new JPanel();
        botton.add(update);
        botton.add(cancelUpdate);

        JPanel panel=new JPanel();
        panel.setLayout(new BoxLayout(panel, BoxLayout.Y_AXIS));

        panel.add(lab);

        if(item.getSelectedIndex()==0){
            System.out.println("Edit title");
            lab.setText("Insert the new title:");
            par="nm_film";
            value=1;
            up=false;
            panel.add(text);
        }
        if(item.getSelectedIndex()==1){
            par="dir_film";
            lab.setText("Insert the new director:");
            value=2;
            table="director";
            up=true;
            combo.setModel(resultDirector);
            panel.add(combo);
        }
        if(item.getSelectedIndex()==2){
            par="lan_film";
            lab.setText("Insert the new language:");
            value=2;
            up=true;
            table="languages";
            combo.setModel(resultLanguage);
            panel.add(combo);
        }
        if(item.getSelectedIndex()==3){
            par="olan_film";
            lab.setText("Insert the new original language:");
            value=2;
            up=true;
            table="languages";
            combo.setModel(resultLanguage);
            panel.add(combo);
        }
        if(item.getSelectedIndex()==4){
            par="country";
            lab.setText("Insert the new country:");
            value=2;
            up=true;
            table="country";
            combo.setModel(resultCountry);
            panel.add(combo);
        }
        if(item.getSelectedIndex()==5){
            par="runt";
            lab.setText("Insert the new running time value:");
            value=1;
            up=false;
            panel.add(text);
        }
        if(item.getSelectedIndex()==6){
            par="yearf";
            lab.setText("Insert the new year:");
            value=1;
            up=false;
            panel.add(text);
        }
        if(item.getSelectedIndex()==7){
            par="subt";
            lab.setText("Insert the new subtitles:");
            value=2;
            up=true;
            table="subtitles";
            combo.setModel(resultSubtitles);
            panel.add(combo);
        }
        if(item.getSelectedIndex()==8){
            par="rating";
            up=false;
            lab.setText("Insert the new rating:");
            String[] s={"0","1","2","3","4","5","6","7","8","9","10"};
            combo=new JComboBox(s);
            panel.add(combo);
            value=2;
        }
        if(item.getSelectedIndex()==9){
            par="genref";
            lab.setText("Insert the new genre:" );
            value=2;
            up=true;
            combo.setModel(resultGenreF);
            table="genref";
            panel.add(combo);
        }
        if(item.getSelectedIndex()==10){
            par="poster";
            lab.setText("Insert the new poster:");
            value=1;
            up=false;
            JPanel pan=new JPanel();
            text.setText("Name of the file");
            text.setEnabled(false);
            pan.add(text);
            pan.add(editSearch);
            panel.add(pan);
        }
        if(item.getSelectedIndex()==11){
            updateValue.setBounds(250,150,400,400);
            par="comf";
            up=true;
            value=3;
            table="commentsf";
            lab.setText("Insert new comment:");
            panel.add(area);
        }

        panel.add(botton);

        updateValue.add(panel);

        updateValue.pack();
        updateValue.setVisible(true);
    }

    //<SHOW FILMS> edits the information of the film in the database when "Update" is pressed
    private void updateFilm(java.awt.event.ActionEvent evt){
        if(value==3){
            System.out.println("DRA"+db.consultCommentF(url, driver, usuario, senha, db.getFilmID(url, driver, usuario, senha, "select * from films where nm_film='"+nameFilm+"' AND dir_film='"+directorFilm+"';")));
            if(db.consultCommentF(url, driver, usuario, senha, db.getFilmID(url, driver, usuario, senha, "select * from films where nm_film='"+nameFilm+"' AND dir_film='"+directorFilm+"';")).length()!=0){
                if(db.generalUpdate(url, driver, usuario, senha, "update commentsf set comf='"+area.getText()+"' where id_film="+db.getFilmID(url, driver, usuario, senha, "select * from films where nm_film='"+nameFilm+"' AND dir_film='"+directorFilm+"';")+";")){
                    JOptionPane.showMessageDialog(this, "Update was successfully made!", "Success", JOptionPane.INFORMATION_MESSAGE);
                    updateValue.dispose();
                }else
                    JOptionPane.showMessageDialog(this, "Update could not be made!", "ERROR", JOptionPane.ERROR_MESSAGE);
            }else{
                System.out.println("Saving comment...");
                String id_film=db.getFilmID(url, driver, usuario, senha,"select * from films where nm_film='"+nameFilm+"' AND dir_film='"+directorFilm+"';");
                if(db.generalUpdate(url, driver, usuario, senha, "insert into commentsf values ("+id_film+",'"+area.getText()+"');")){
                    JOptionPane.showMessageDialog(this, "Update was successfully made!", "Success", JOptionPane.INFORMATION_MESSAGE);
                    updateValue.dispose();
                }else
                    JOptionPane.showMessageDialog(this, "Update could not be made!", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
        }
        if(value==1){
            if(db.generalUpdate(url, driver, usuario, senha, "update films set "+par+"='"+text.getText()+"' where nm_film='"+nameFilm+"' AND dir_film='"+directorFilm+"';")){
                JOptionPane.showMessageDialog(this, "Update was successfully made!", "Success", JOptionPane.INFORMATION_MESSAGE);
                updateValue.dispose();
            }else
                JOptionPane.showMessageDialog(this, "Update could not be made!", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
        if(value==2){
            if(table=="director"){
                if(db.generalUpdate(url, driver, usuario, senha, "update films set "+par+"="+db.consultDirector(url,driver,usuario,senha,combo.getSelectedItem().toString())+" where nm_film='"+nameFilm+"' AND dir_film='"+directorFilm+"';")){
                    JOptionPane.showMessageDialog(this, "Update was successfully made!", "Success", JOptionPane.INFORMATION_MESSAGE);
                    updateValue.dispose();
                }else
                    JOptionPane.showMessageDialog(this, "Update could not be made!", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
            if(table=="languages"){
                if(db.generalUpdate(url, driver, usuario, senha, "update films set "+par+"="+db.consultLanguage(url,driver,usuario,senha,combo.getSelectedItem().toString())+" where nm_film='"+nameFilm+"' AND dir_film='"+directorFilm+"';")){
                    JOptionPane.showMessageDialog(this, "Update was successfully made!", "Success", JOptionPane.INFORMATION_MESSAGE);
                    updateValue.dispose();
                }else
                    JOptionPane.showMessageDialog(this, "Update could not be made!", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
            if(table=="country"){
                if(db.generalUpdate(url, driver, usuario, senha, "update films set "+par+"="+db.consultCountry(url,driver,usuario,senha,combo.getSelectedItem().toString())+" where nm_film='"+nameFilm+"' AND dir_film='"+directorFilm+"';")){
                    JOptionPane.showMessageDialog(this, "Update was successfully made!", "Success", JOptionPane.INFORMATION_MESSAGE);
                    updateValue.dispose();
                }else
                    JOptionPane.showMessageDialog(this, "Update could not be made!", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
            if(table=="genref"){
                if(db.generalUpdate(url, driver, usuario, senha, "update films set "+par+"="+db.consultGenreF(url,driver,usuario,senha,combo.getSelectedItem().toString())+" where nm_film='"+nameFilm+"' AND dir_film='"+directorFilm+"';")){
                    JOptionPane.showMessageDialog(this, "Update was successfully made!", "Success", JOptionPane.INFORMATION_MESSAGE);
                    updateValue.dispose();
                }else
                    JOptionPane.showMessageDialog(this, "Update could not be made!", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
            if(table=="subtitles"){
                if(db.generalUpdate(url, driver, usuario, senha, "update films set "+par+"="+db.consultSubtitles(url,driver,usuario,senha,combo.getSelectedItem().toString())+" where nm_film='"+nameFilm+"' AND dir_film='"+directorFilm+"';")){
                    JOptionPane.showMessageDialog(this, "Update was successfully made!", "Success", JOptionPane.INFORMATION_MESSAGE);
                    updateValue.dispose();
                }else
                    JOptionPane.showMessageDialog(this, "Update could not be made!", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
            if(par=="rating"){
                if(db.generalUpdate(url, driver, usuario, senha, "update films set "+par+"="+combo.getSelectedItem().toString()+" where nm_film='"+nameFilm+"' AND dir_film='"+directorFilm+"';")){
                    JOptionPane.showMessageDialog(this, "Update was successfully made!", "Success", JOptionPane.INFORMATION_MESSAGE);
                    updateValue.dispose();
                }else
                    JOptionPane.showMessageDialog(this, "Update could not be made!", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
        }

        showDataFilms(nextF);
        editFilm.toFront();
    }

    // <SHOW FILMS> closes the window to insert value to edit information about the film
    private void cancelUpdateFilm(java.awt.event.ActionEvent evt){
        updateValue.dispose();
    }

    // <SHOW FILMS> shows a JFileChooser window when Search is pressed when trying to edit poster set to a film
    private void searchEditAction(java.awt.event.ActionEvent evt){
        JFileChooser fc = new JFileChooser("C:\\Users\\grad-student\\Desktop\\Project\\Database\\src\\pictures\\films");
        fc.showSaveDialog(this);
        String path = fc.getSelectedFile().getName();
        text.setText(path);
    }

    // <SHOW FILMS> shows <ADD NEW FILM> screen when "Add new" is pressed
    private void newFilmActionPerformed(java.awt.event.ActionEvent evt){
        filmMain.setVisible(false);
        addNewFilm.setVisible(true);
        showFilm.setVisible(false);
    }

    // <ADD NEW FILM> opens a window where a name of the director can be written to
    // be inserted in the directors database.
    private void dirActionPerformed(java.awt.event.ActionEvent evt){
        addDirector = new JFrame();
        addDirector.setBounds(250,250,300,150);
        JPanel pan1=new JPanel(new BorderLayout());
        JLabel lab1=new JLabel("Write name of director to be added");
        txtDir=new JTextField("", 100);

        JPanel pan11=new JPanel();
        pan11.add(okDir);
        pan11.add(cancelDir);

        pan1.add(lab1, BorderLayout.NORTH);
        pan1.add(txtDir, BorderLayout.CENTER);
        pan1.add(pan11, BorderLayout.SOUTH);

        addDirector.add(pan1);

        addDirector.setVisible(true);
        addDirector.toFront();
    }

    // <ADD NEW FILM> name of director is inserted in the database and then, closes director window.
    private void okDirActionPerformed(java.awt.event.ActionEvent evt) {
        String addD=txtDir.getText();
        if(db.generalUpdate(url, driver, usuario, senha,"insert into director (nm_director) values('"+addD+"');")){
            resultDirector.addElement(addD);
            JOptionPane.showMessageDialog(this, "New director added succesfully", "Success", JOptionPane.INFORMATION_MESSAGE);
            addDirector.dispose();
        }else
            JOptionPane.showMessageDialog(this, "Error: new director not added!", "ERROR", JOptionPane.ERROR_MESSAGE);
    }

    // <ADD NEW FILM> closes director window without saving the director in the database.
    private void cancelDirActionPerformed(java.awt.event.ActionEvent evt){
        addDirector.dispose();
    }

    // <ADD NEW FILM> opens a window where a language can be written to
    // be inserted in the languages database.
    private void lanButtonActionPerformed(java.awt.event.ActionEvent evt){
        addLanguage = new JFrame();
        addLanguage.setBounds(250,250,300,150);
        JPanel pan1=new JPanel(new BorderLayout());
        JLabel lab1=new JLabel("Write name of language to be added");
        txtLan=new JTextField("", 100);

        JPanel pan11=new JPanel();
        pan11.add(okLan);
        pan11.add(cancelLan);

        pan1.add(lab1, BorderLayout.NORTH);
        pan1.add(txtLan, BorderLayout.CENTER);
        pan1.add(pan11, BorderLayout.SOUTH);

        addLanguage.add(pan1);

        addLanguage.setVisible(true);
        addLanguage.toFront();
    }

    // <ADD NEW FILM> language is inserted in the database and then, closes language window.
    private void okLanActionPerformed(java.awt.event.ActionEvent evt) {
        String addL=txtLan.getText();
        if(db.generalUpdate(url, driver, usuario, senha,"insert into languages (nm_lan) values('"+addL+"');")){
            resultLanguage.addElement(addL);
            resultOLanguage.addElement(addL);
            JOptionPane.showMessageDialog(this, "New language added succesfully", "Success", JOptionPane.INFORMATION_MESSAGE);
            addLanguage.dispose();
        }else
            JOptionPane.showMessageDialog(this, "Error: new language not added!", "ERROR", JOptionPane.ERROR_MESSAGE);
    }

    // <ADD NEW FILM> closes languages window
    private void cancelLanActionPerformed(java.awt.event.ActionEvent evt){
        addLanguage.dispose();
    }

    // <ADD NEW FILM> opens a window where a country can be written to
    // be inserted in the country database.
    private void countryButtonActionPerformed(java.awt.event.ActionEvent evt){
        addCountry = new JFrame();
        addCountry.setBounds(250,250,300,150);
        JPanel pan1=new JPanel(new BorderLayout());
        JLabel lab1=new JLabel("Write name of country to be added");
        txtCoun=new JTextField("", 100);

        JPanel pan11=new JPanel();
        pan11.add(okCoun);
        pan11.add(cancelCoun);

        pan1.add(lab1, BorderLayout.NORTH);
        pan1.add(txtCoun, BorderLayout.CENTER);
        pan1.add(pan11, BorderLayout.SOUTH);

        addCountry.add(pan1);

        addCountry.setVisible(true);
        addCountry.toFront();
    }

    // <ADD NEW FILM> country is inserted in the database and then, closes country window.
    private void okCounActionPerformed(java.awt.event.ActionEvent evt) {
        String addL=txtCoun.getText();
        if(db.generalUpdate(url, driver, usuario, senha,"insert into country (nm_country) values('"+addL+"');")){
            resultCountry.addElement(addL);
            JOptionPane.showMessageDialog(this, "New country added succesfully", "Success", JOptionPane.INFORMATION_MESSAGE);
            addCountry.dispose();
        }else
            JOptionPane.showMessageDialog(this, "Error: new country not added!", "ERROR", JOptionPane.ERROR_MESSAGE);
    }

    // <ADD NEW FILM> closes country window
    private void cancelCounActionPerformed(java.awt.event.ActionEvent evt){
        addCountry.dispose();
    }

    // <ADD NEW FILM> opens a window where kind of subtitles can be written to
    // be inserted in the subtitles database.
    private void subtButtonActionPerformed(java.awt.event.ActionEvent evt){
        addSubt = new JFrame();
        addSubt.setBounds(250,250,300,150);
        JPanel pan1=new JPanel(new BorderLayout());
        JLabel lab1=new JLabel("Write subtitles to be added");
        txtSubt=new JTextField("", 100);

        JPanel pan11=new JPanel();
        pan11.add(okSubt);
        pan11.add(cancelSubt);

        pan1.add(lab1, BorderLayout.NORTH);
        pan1.add(txtSubt, BorderLayout.CENTER);
        pan1.add(pan11, BorderLayout.SOUTH);

        addSubt.add(pan1);

        addSubt.setVisible(true);
        addSubt.toFront();
    }

    // <ADD NEW FILM> subtitles is inserted in the database and then, closes subtitles window.
    private void okSubtActionPerformed(java.awt.event.ActionEvent evt) {
        String addD=txtSubt.getText();
        if(db.generalUpdate(url, driver, usuario, senha,"insert into subtitle (nm_subt) values('"+addD+"');")){
            resultSubtitles.addElement(addD);
            JOptionPane.showMessageDialog(this, "New subtitles added succesfully", "Success", JOptionPane.INFORMATION_MESSAGE);
            addSubt.dispose();
        }else
            JOptionPane.showMessageDialog(this, "Error: new subtitles not added!", "ERROR", JOptionPane.ERROR_MESSAGE);
    }

    // <ADD NEW FILM> closes subtitles window
    private void cancelSubtActionPerformed(java.awt.event.ActionEvent evt){
        addSubt.dispose();
    }

    // <ADD NEW FILM> opens a window where a genre can be written to
    // be inserted in the genres database.
    private void GFButtonActionPerformed(java.awt.event.ActionEvent evt){
        addGF = new JFrame();
        addGF.setBounds(250,250,300,150);
        JPanel pan1=new JPanel(new BorderLayout());
        JLabel lab1=new JLabel("Write genre to be added");
        txtGF=new JTextField("", 100);

        JPanel pan11=new JPanel();
        pan11.add(okGF);
        pan11.add(cancelGF);

        pan1.add(lab1, BorderLayout.NORTH);
        pan1.add(txtGF, BorderLayout.CENTER);
        pan1.add(pan11, BorderLayout.SOUTH);

        addGF.add(pan1);

        addGF.setVisible(true);
        addGF.toFront();
    }

    // <ADD NEW FILM> genre is inserted in the database and then, closes genre window.
    private void okGFActionPerformed(java.awt.event.ActionEvent evt) {
        String addD=txtGF.getText();
        if(db.generalUpdate(url, driver, usuario, senha,"insert into genref (nm_genref) values('"+addD+"');")){
            resultGenreF.addElement(addD);
            JOptionPane.showMessageDialog(this, "New genre added succesfully", "Success", JOptionPane.INFORMATION_MESSAGE);
            addGF.dispose();
        }else
            JOptionPane.showMessageDialog(this, "Error: new genre not added!", "ERROR", JOptionPane.ERROR_MESSAGE);
    }

    // <ADD NEW FILM> closes genres window
    private void cancelGFActionPerformed(java.awt.event.ActionEvent evt){
        addGF.dispose();
    }

    // <ADD NEW FILM> opens a window where it is possible to write a comment to
    // be inserted into the database when the film is added.
    private void addCommentFilm(java.awt.event.ActionEvent evt){
        addCommentF = new JFrame();
        addCommentF.setBounds(250,150,300,300);
        JPanel pan4=new JPanel(new BorderLayout());
        JLabel lab4=new JLabel("Write comment");
        txtF=new JTextArea("");

        JPanel pan41=new JPanel();
        pan41.add(okF);
        pan41.add(cancelF);

        pan4.add(lab4, BorderLayout.NORTH);
        pan4.add(txtF, BorderLayout.CENTER);
        pan4.add(pan41, BorderLayout.SOUTH);

        addCommentF.add(pan4);

        addCommentF.setVisible(true);
        addCommentF.toFront();
    }

    //<ADD NEW FILM> saves the comment inserted and, then, closes the comment window.
    private void okFListener(java.awt.event.ActionEvent evt){
        commentFText=txtF.getText();
        JOptionPane.showMessageDialog(this, "New comment saved", "Success", JOptionPane.INFORMATION_MESSAGE);
        commentFDefined=true;
        addCommentF.dispose();
    }

    //<ADD NEW FILM> closes the comment window without saving the comment.
    private void cancelFListener(java.awt.event.ActionEvent evt){
        addCommentF.dispose();
    }

    // <ADD NEW FILM> opens a JFileChooser component when button Search is pressed and
    // fills the JTextField with name of the file selected as film poster
    private void searchFilmActionPerformed(java.awt.event.ActionEvent evt){
        JFileChooser fc = new JFileChooser("C:\\Users\\grad-student\\Desktop\\Project\\Database\\src\\pictures\\films");
        fc.showSaveDialog(this);
        String path = fc.getSelectedFile().getName();
        posterNewFilm.setText(path);
    }

    // <ADD NEW FILM> add a new film to the database when ADD is pressed. Shows an error message if it cannot be done.
    private void addBNewFilmActionPerformed(java.awt.event.ActionEvent evt){
        String tFilm=titleNewFilm.getText();
        String dirFilm=db.consultDirector(url, driver, usuario, senha, dirNewFilm.getSelectedItem().toString());
        String lanFilm=db.consultLanguage(url, driver, usuario, senha, lanNewFilm.getSelectedItem().toString());
        String oLanFilm=db.consultLanguage(url, driver, usuario, senha, olanNewFilm.getSelectedItem().toString());
        String countryFilm=db.consultCountry(url, driver, usuario, senha, counNewFilm.getSelectedItem().toString());
        String rtFilm=rtNewFilm.getText();
        String yearFilm=yearNewFilm.getText();
        String subtFilm=db.consultSubtitles(url, driver, usuario, senha, subtNewFilm.getSelectedItem().toString());
        String rateFilm=rateNewFilm.getSelectedItem().toString();
        String genreFilm=db.consultGenreF(url, driver, usuario, senha, genreNewFilm.getSelectedItem().toString());
        String posterFilm=posterNewFilm.getText();

        if(db.generalUpdate(url, driver, usuario, senha, "insert into films (nm_film,dir_film,lan_film,olan_film,country,runt,rating,yearf,subt,genref,poster) values ('"+tFilm+"','"+dirFilm+"','"+lanFilm+"','"+oLanFilm+"','"+countryFilm+"','"+rtFilm+"','"+rateFilm+"','"+yearFilm+"','"+subtFilm+"','"+genreFilm+"','"+posterFilm+"');")){
            JOptionPane.showMessageDialog(this, "New film added to the database", "Success", JOptionPane.INFORMATION_MESSAGE);
            if(commentFDefined){
                System.out.println("Saving comment...");
                String id_film=db.getFilmID(url, driver, usuario, senha,"select * from films where nm_film='"+tFilm+"' AND dir_film='"+dirFilm+"';");
                db.generalUpdate(url, driver, usuario, senha, "insert into commentsf values ("+id_film+",'"+commentFText+"');");
                commentFText="";
            }
            cleanFilmPanel();
        }
        else
            JOptionPane.showMessageDialog(this, "New film cound not be added", "Error!", JOptionPane.ERROR_MESSAGE);
    }

    // <ADD NEW FILM> shows the main page again when BACK is pressed
    private void backNewFilmActionPerformed(java.awt.event.ActionEvent evt){
        filmMain.setVisible(true);
        addNewFilm.setVisible(false);
        showFilm.setVisible(false);
    }

    // <ADD NEW FILM> executes cleanFilmPanel when CLEAR is pressed
    private void cleanNewFilmActionPerformed(java.awt.event.ActionEvent evt){
        cleanFilmPanel();
    }

    // <ADD NEW FILM> cleans all the fields in <ADD NEW FILM> screen
    private void cleanFilmPanel(){
        titleNewFilm.setText("");
        dirNewFilm.setSelectedIndex(0);
        lanNewFilm.setSelectedIndex(0);
        olanNewFilm.setSelectedIndex(0);
        counNewFilm.setSelectedIndex(0);
        rtNewFilm.setText("");
        yearNewFilm.setText("");
        subtNewFilm.setSelectedIndex(0);
        rateNewFilm.setSelectedIndex(0);
        genreNewFilm.setSelectedIndex(0);
        posterNewFilm.setText("");
    }





    /*
     * METHODS RELATED TO BOOKS!!!!
     */

    // <MAIN FILMS> when Search is pressed, get the parameter of the search and
    // executes showDataBooks
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:

        if(!titleBook.getText().isEmpty()){
            tBook=titleBook.getText();
            titleB=true;
        }
        else{
            titleB=false;
        }

        if(writer.getSelectedIndex()!=0){
            wBook=writer.getSelectedItem().toString();
            writerB=true;
        }
        else{
            writerB=false;
        }

        if(genreBook.getSelectedIndex()!=0){
            gBook=genreBook.getSelectedItem().toString();
            genreB=true;
        }
        else{
            genreB=false;
        }

        if(!yearBook.getText().isEmpty()){
            yBook=yearBook.getText();
            yearB=true;
        }
        else{
            yearB=false;
        }

        if(jComboBox1.getSelectedIndex()!=0){
            lBook=jComboBox1.getSelectedItem().toString();
            localB=true;
        }
        else{
            localB=false;
        }
        if(jComboBox2.getSelectedIndex()!=0){
            sBook=jComboBox2.getSelectedItem().toString();
            statusB=true;
        }
        else{
            statusB=false;
        }

        rBook=ratingBook.getSelectedItem().toString();

        nextB=0;
        showMessage=true;

        if(!showDataBooks(nextB))
            JOptionPane.showMessageDialog(this, "Sorry,no results for this search. =(", "Error", JOptionPane.ERROR_MESSAGE);

    }//GEN-LAST:event_jButton2ActionPerformed

    // <SHOW BOOKS> consults the database and search for the book according to the parameter
    // inserted. Shows the screen with the results.
    private boolean showDataBooks(int i){

        String result[][]=new String[100][1000];

        if(titleB){
            result=db.consultBooks(url, driver, usuario, senha, "nm_book", tBook);
            ratingB=false;
        }
        if(writerB){
            result=db.consultBooks(url, driver, usuario, senha, "wr_book",db.consultWriter(url, driver, usuario, senha, wBook));
            ratingB=false;
        }
        if(genreB){
            result=db.consultBooks(url, driver, usuario, senha, "gn_book",db.consultGenreB(url, driver, usuario, senha, gBook));
            ratingB=false;
        }
        if(yearB){
            result=db.consultBooks(url, driver, usuario, senha, "y_book", yBook);
            ratingB=false;
        }
        if(localB){
            result=db.consultBooks(url, driver, usuario, senha, "localization",db.consultLocal(url, driver, usuario, senha, lBook));
            ratingB=false;
        }
        if(statusB){
            result=db.consultBooks(url, driver, usuario, senha, "sta_book",db.consultStatusB(url, driver, usuario, senha, sBook));
            ratingB=false;
        }
        if(ratingB){
            result=db.consultBooks(url, driver, usuario, senha, "rt_book",rBook);
        }
        if(showMessage&&result.length!=0)
            JOptionPane.showMessageDialog(this, result.length+" result(s) found!", "=)", JOptionPane.INFORMATION_MESSAGE);

        showMessage=false;

        if(result.length>i){

        if(result[i][10]!=""){
            //labPic.setIcon(createImageIcon("/pictures/books/"+result[i][10], "COVER"));
            showImage=true;
            createImageIcon("C:\\Users\\grad-student\\Desktop\\Project\\Database\\src\\pictures\\books\\"+result[i][10], "COVER");
        }else{
            showImage=false;
        }

        labTitle.setText(result[i][0]);
        labOriginal.setText(result[i][1]);
        labWriter.setText(db.consultWriter2(url, driver, usuario, senha, result[i][2]));
        labGenreB.setText(db.consultGenreB2(url, driver, usuario, senha, result[i][3]));
        labYear.setText(result[i][4]);
        labEditor.setText(db.consultEditor2(url, driver, usuario, senha, result[i][6]));
        labPages.setText(result[i][7]);
        labLocal.setText(db.consultLocal2(url, driver, usuario, senha, result[i][9]));
        labStatus.setText(db.consultStatusB2(url, driver, usuario, senha, result[i][8]));
        labRate.setText(result[i][5]+"/10");

        String id_book=db.getBookID(url, driver, usuario, senha,"select * from books where nm_book='"+result[i][0]+"' AND pages='"+result[i][7]+"';");
        showComment.setText(db.consultComment(url, driver, usuario, senha,id_book));
        if(showComment.getText().equals(labStatus.getText())||showComment.getText().equals(labOriginal.getText()))
            showComment.setText("");

        repaint();

        nameBook=result[i][0];
        pageBook=result[i][7];

        bookMain.setVisible(false);
        showBook.setVisible(true);

        return true;
        }else return false;
    }

    // <SHOW BOOKS> when EDIT is pressed, shows a window with the parameters to be chosen to be edited
    private void showEditActionPerformed(java.awt.event.ActionEvent evt) {
        editBook = new JFrame();
        editBook.setBounds(250,150,300,150);
        JPanel pan=new JPanel();
        pan.setLayout(new BoxLayout(pan,BoxLayout.Y_AXIS));

        String[] itens={"Title","Original Title", "Writer", "Editor", "Pages", "Status", "Year", "Local", "Rating", "Genre", "Poster", "Comment"};

        itemb=new JComboBox(itens);
        itemb.setPreferredSize(new Dimension(250,10));

        JPanel intPan=new JPanel();

        intPan.add(editItemb);
        intPan.add(cancelItemb);

        JLabel lab=new JLabel("Choose the item to be modified");
        lab.setAlignmentX(Component.CENTER_ALIGNMENT);
        itemb.setAlignmentX(Component.CENTER_ALIGNMENT);
        intPan.setAlignmentX(Component.CENTER_ALIGNMENT);

        pan.add(lab);
        pan.add(itemb);
        pan.add(intPan);

        editBook.add(pan);

        editBook.setVisible(true);
        editBook.toFront();
    }

    // <SHOW FILMS> when CANCEL is pressed, closes the window to edit information about film
    private void cancelItembAction(java.awt.event.ActionEvent evt){
        editBook.dispose();
    }

    // <SHOW FILMS> gets the parameter to be changed and creates a window where the value for
    // that parameter can be inserted when Update is pressed.
    private void editItembAction(java.awt.event.ActionEvent evt){
        parb="";

        System.out.println(itemb.getSelectedIndex());

        updateValueb=new JFrame();
        updateValueb.setBounds(250,150,300,150);

        JLabel lab=new JLabel();
        lab.setAlignmentX(Component.CENTER_ALIGNMENT);
        combob=new JComboBox();
        combob.setAlignmentX(Component.CENTER_ALIGNMENT);
        textb=new JTextField();
        textb.setAlignmentX(Component.CENTER_ALIGNMENT);
        areab=new JTextArea();
        areab.setAlignmentX(Component.CENTER_ALIGNMENT);

        JPanel botton=new JPanel();
        botton.add(updateb);
        botton.add(cancelUpdateb);

        JPanel panel=new JPanel();
        panel.setLayout(new BoxLayout(panel, BoxLayout.Y_AXIS));

        panel.add(lab);

        if(itemb.getSelectedIndex()==0){
            System.out.println("Edit title");
            lab.setText("Insert the new title:");
            parb="nm_book";
            valueb=1;
            panel.add(textb);
        }
        if(itemb.getSelectedIndex()==1){
            System.out.println("Edit original title");
            lab.setText("Insert the new original title:");
            parb="ori_book";
            valueb=1;
            panel.add(textb);
        }
        if(itemb.getSelectedIndex()==2){
            parb="wr_book";
            lab.setText("Insert the new writer:");
            valueb=2;
            tableb="writer";
            combob.setModel(resultWriter);
            panel.add(combob);
        }
        if(itemb.getSelectedIndex()==3){
            parb="ed_book";
            lab.setText("Insert the new editor:");
            valueb=2;
            tableb="editor";
            combob.setModel(resultEditor);
            panel.add(combob);
        }
        if(itemb.getSelectedIndex()==4){
            lab.setText("Insert the new number of pages:");
            parb="pages";
            valueb=1;
            panel.add(textb);
        }
        if(itemb.getSelectedIndex()==5){
           parb="sta_book";
            lab.setText("Insert the new status:");
            valueb=2;
            tableb="statusb";
            combob.setModel(resultStatusB);
            panel.add(combob);
        }
        if(itemb.getSelectedIndex()==6){
            parb="y_book";
            lab.setText("Insert the new year:");
            valueb=1;
            panel.add(textb);
        }
        if(itemb.getSelectedIndex()==7){
            parb="localization";
            lab.setText("Insert the new localization:");
            valueb=2;
            tableb="place";
            combob.setModel(resultPlace);
            panel.add(combob);
        }
        if(itemb.getSelectedIndex()==8){
            parb="rt_book";
            lab.setText("Insert the new rating:");
            String[] s={"0","1","2","3","4","5","6","7","8","9","10"};
            combob=new JComboBox(s);
            panel.add(combob);
            valueb=2;
        }
        if(itemb.getSelectedIndex()==9){
            parb="gn_book";
            lab.setText("Insert the new genre:" );
            valueb=2;
            combob.setModel(resultGenreB);
            tableb="genreb";
            panel.add(combob);
        }
        if(itemb.getSelectedIndex()==10){
            parb="cover";
            lab.setText("Insert the new cover:");
            valueb=1;
            JPanel pan=new JPanel();
            textb.setText("Name of the file");
            textb.setEnabled(false);
            pan.add(textb);
            pan.add(editSearchb);
            panel.add(pan);
        }
        if(itemb.getSelectedIndex()==11){
            updateValueb.setBounds(250,150,400,400);
            parb="com";
            valueb=3;
            tableb="comments";
            lab.setText("Insert new comment:");
            panel.add(areab);
        }

        panel.add(botton);

        updateValueb.add(panel);

        updateValueb.pack();
        updateValueb.setVisible(true);
    }

    //<SHOW BOOKS> edits the information of the book in the database when "Update" is pressed
    private void updateBook(java.awt.event.ActionEvent evt){
        if(valueb==3){
            if(db.consultComment(url, driver, usuario, senha, db.getBookID(url, driver, usuario, senha, "select * from books where nm_book='"+nameBook+"' AND pages="+pageBook+";")).length()!=0){
                if(db.generalUpdate(url, driver, usuario, senha, "update comments set com='"+areab.getText()+"' where book="+db.getBookID(url, driver, usuario, senha, "select * from books where nm_book='"+nameBook+"' AND pages="+pageBook+";")+";")){
                    JOptionPane.showMessageDialog(this, "Update was successfully made!", "Success", JOptionPane.INFORMATION_MESSAGE);
                    updateValueb.dispose();
                }else
                    JOptionPane.showMessageDialog(this, "Update could not be made!", "ERROR", JOptionPane.ERROR_MESSAGE);
            }else{
                System.out.println("Saving comment...");
                String id_film=db.getBookID(url, driver, usuario, senha,"select * from books where nm_book='"+nameBook+"' AND pages="+pageBook+";");
                if(db.generalUpdate(url, driver, usuario, senha, "insert into comments values ('"+areab.getText()+"', "+id_film+");")){
                    JOptionPane.showMessageDialog(this, "Update was successfully made!", "Success", JOptionPane.INFORMATION_MESSAGE);
                    updateValueb.dispose();
                }else
                    JOptionPane.showMessageDialog(this, "Update could not be made!", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
        }
        if(valueb==1){
            if(db.generalUpdate(url, driver, usuario, senha, "update books set "+parb+"='"+textb.getText()+"' where nm_book='"+nameBook+"' AND pages="+pageBook+";")){
                JOptionPane.showMessageDialog(this, "Update was successfully made!", "Success", JOptionPane.INFORMATION_MESSAGE);
                updateValueb.dispose();
            }else
                JOptionPane.showMessageDialog(this, "Update could not be made!", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
        if(valueb==2){
            if(tableb=="writer"){
                if(db.generalUpdate(url, driver, usuario, senha, "update books set "+parb+"="+db.consultWriter(url,driver,usuario,senha,combob.getSelectedItem().toString())+" where nm_book='"+nameBook+"' AND pages="+pageBook+";")){
                    JOptionPane.showMessageDialog(this, "Update was successfully made!", "Success", JOptionPane.INFORMATION_MESSAGE);
                    updateValueb.dispose();
                }else
                    JOptionPane.showMessageDialog(this, "Update could not be made!", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
            if(tableb=="editor"){
                if(db.generalUpdate(url, driver, usuario, senha, "update books set "+parb+"="+db.consultEditor(url,driver,usuario,senha,combob.getSelectedItem().toString())+" where nm_book='"+nameBook+"' AND pages="+pageBook+";")){
                    JOptionPane.showMessageDialog(this, "Update was successfully made!", "Success", JOptionPane.INFORMATION_MESSAGE);
                    updateValueb.dispose();
                }else
                    JOptionPane.showMessageDialog(this, "Update could not be made!", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
            if(tableb=="statusb"){
                if(db.generalUpdate(url, driver, usuario, senha, "update books set "+parb+"="+db.consultStatusB(url,driver,usuario,senha,combob.getSelectedItem().toString())+" where nm_book='"+nameBook+"' AND pages="+pageBook+";")){
                    JOptionPane.showMessageDialog(this, "Update was successfully made!", "Success", JOptionPane.INFORMATION_MESSAGE);
                    updateValueb.dispose();
                }else
                    JOptionPane.showMessageDialog(this, "Update could not be made!", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
            if(tableb=="place"){
                if(db.generalUpdate(url, driver, usuario, senha, "update books set "+parb+"="+db.consultLocal(url,driver,usuario,senha,combob.getSelectedItem().toString())+" where nm_book='"+nameBook+"' AND pages="+pageBook+";")){
                    JOptionPane.showMessageDialog(this, "Update was successfully made!", "Success", JOptionPane.INFORMATION_MESSAGE);
                    updateValueb.dispose();
                }else
                    JOptionPane.showMessageDialog(this, "Update could not be made!", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
            if(tableb=="genreb"){
                if(db.generalUpdate(url, driver, usuario, senha, "update books set "+parb+"="+db.consultGenreB(url,driver,usuario,senha,combob.getSelectedItem().toString())+" where nm_book='"+nameBook+"' AND pages="+pageBook+";")){
                    JOptionPane.showMessageDialog(this, "Update was successfully made!", "Success", JOptionPane.INFORMATION_MESSAGE);
                    updateValueb.dispose();
                }else
                    JOptionPane.showMessageDialog(this, "Update could not be made!", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
            if(parb=="rt_book"){
                if(db.generalUpdate(url, driver, usuario, senha, "update books set "+parb+"="+combob.getSelectedItem().toString()+" where nm_book='"+nameBook+"' AND pages="+pageBook+";")){
                    JOptionPane.showMessageDialog(this, "Update was successfully made!", "Success", JOptionPane.INFORMATION_MESSAGE);
                    updateValueb.dispose();
                }else
                    JOptionPane.showMessageDialog(this, "Update could not be made!", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
        }

        showDataBooks(nextB);
        editBook.toFront();
    }

    // <SHOW BOOKS> closes the window to insert value to edit information about the book
    private void cancelUpdateBook(java.awt.event.ActionEvent evt){
        updateValueb.dispose();
    }

    // <SHOW BOOKS> shows a JFileChooser window when Search is pressed when trying to edit a cover set to a book
    private void searchEditbAction(java.awt.event.ActionEvent evt){
        JFileChooser fc = new JFileChooser("C:\\Users\\grad-student\\Desktop\\Project\\Database\\src\\pictures\\books");
        fc.showSaveDialog(this);
        String path = fc.getSelectedFile().getName();
        textb.setText(path);
    }

    // <SHOW BOOKS> when HOME is pressed, returns to <MAIN BOOK> screen
    private void showHomeActionPerformed(java.awt.event.ActionEvent evt) {
        bookMain.setVisible(true);
        jPanel.setVisible(false);
        showBook.setVisible(false);
        nextB=0;
    }

    // <SHOW BOOKS> when NEXT is pressed, shows the next result for the search
    private void showNextActionPerformed(java.awt.event.ActionEvent evt) {
        nextB++;
        System.out.println("Show result #"+nextB);
        if(!showDataBooks(nextB)){
            JOptionPane.showMessageDialog(this, "There is no more results for your search", "Error", JOptionPane.INFORMATION_MESSAGE);
            nextB--;
            repaint();
        }
    }

    // <SHOW BOOKS> when BACK is pressed, shows the previous result for the search.
    private void showBackActionPerformed(java.awt.event.ActionEvent evt) {
        nextB--;
        if(nextB<0){
            JOptionPane.showMessageDialog(this, "There is no more results for your search", "Error", JOptionPane.INFORMATION_MESSAGE);
            nextB=0;
            repaint();
            return;
        }
        if(!showDataBooks(nextB)){
            JOptionPane.showMessageDialog(this, "There is no more results for your search", "Error", JOptionPane.INFORMATION_MESSAGE);
            nextB++;
            return;
        }
    }

    // <ADD NEW BOOK> clear all the fields of the screen
    public void cleanNewBook(){
        TextField2.setText("");
        TextField3.setText("");
        jomboBox2.setSelectedIndex(0);
        jCoboBox3.setSelectedIndex(0);
        TextField4.setText("");
        jTxtField5.setText("");
        ComboBox4.setSelectedIndex(0);
        ComboBox5.setSelectedIndex(0);
        jomboBox6.setSelectedIndex(0);
        jCmboBox7.setSelectedIndex(0);
        TextField1.setText("");
    }

    // <BOOK MAIN> When Add New is pressed, shows the <ADD NEW BOOK> screen
    private void newBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newBookActionPerformed
        // TODO add your handling code here
        jPanel.setVisible(true);
        bookMain.setVisible(false);
        showImage=false;
        repaint();
    }//GEN-LAST:event_newBookActionPerformed

    // <ADD NEW BOOK> shows a window of JFileChooser when Search is pressed and
    // set the JTextField correponding to cover with the name of the chosen file.
    private void Button1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button1ActionPerformed
        // TODO add your handling code here:
        JFileChooser fc = new JFileChooser();
        fc.showSaveDialog(this);
        String path = fc.getSelectedFile().getName();
        TextField1.setText(path);
    }//GEN-LAST:event_Button1ActionPerformed

    // <ADD NEW BOOK> shows a window where the name of a new writer can be written
    private void jutton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jutton6ActionPerformed
        // TODO add your handling code here:
        addWriter = new JFrame();
        addWriter.setBounds(250,250,300,150);
        JPanel pan1=new JPanel(new BorderLayout());
        JLabel lab1=new JLabel("Write name of writer to be added");
        txt1=new JTextField("", 100);

        JPanel pan11=new JPanel();
        pan11.add(ok1);
        pan11.add(cancel1);

        pan1.add(lab1, BorderLayout.NORTH);
        pan1.add(txt1, BorderLayout.CENTER);
        pan1.add(pan11, BorderLayout.SOUTH);

        addWriter.add(pan1);

        addWriter.setVisible(true);
        addWriter.toFront();

    }//GEN-LAST:event_jutton6ActionPerformed

    // <ADD NEW BOOK> add the new writer to the database and closes writer window
    private void ok1ActionPerformed(java.awt.event.ActionEvent evt) {
        String addW=txt1.getText();
        if(db.generalUpdate(url, driver, usuario, senha,"insert into writer (nm_writer) values('"+addW+"');")){
            resultWriter.addElement(addW);
            JOptionPane.showMessageDialog(this, "New writer added succesfully", "Success", JOptionPane.INFORMATION_MESSAGE);
            addWriter.dispose();
        }else
            JOptionPane.showMessageDialog(this, "Error: new writer not added!", "ERROR", JOptionPane.ERROR_MESSAGE);
    }

    // <ADD NEW BOOK> closes writer window
    private void cancel1ActionPerformed(java.awt.event.ActionEvent evt){
        addWriter.dispose();
    }

    // <ADD NEW BOOK> creates a window where a new editor can be written
    private void jutton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jutton7ActionPerformed
        // TODO add your handling code here:
        addEditor = new JFrame();
        addEditor.setBounds(250,250,300,150);
        JPanel pan2=new JPanel(new BorderLayout());
        JLabel lab2=new JLabel("Write name of editor to be added");
        txt2=new JTextField("", 100);

        JPanel pan21=new JPanel();
        pan21.add(ok2);
        pan21.add(cancel2);

        pan2.add(lab2, BorderLayout.NORTH);
        pan2.add(txt2, BorderLayout.CENTER);
        pan2.add(pan21, BorderLayout.SOUTH);

        addEditor.add(pan2);

        addEditor.setVisible(true);
        addEditor.toFront();
    }//GEN-LAST:event_jutton7ActionPerformed

    // <ADD NEW BOOK> adds new editor to the database and closes editor window
    private void ok2ActionPerformed(java.awt.event.ActionEvent evt){
        String addE=txt2.getText();
        if(db.generalUpdate(url, driver, usuario, senha,"insert into editor (nm_ed) values('"+addE+"');")){
            resultEditor.addElement(addE);
            JOptionPane.showMessageDialog(this, "New editor added succesfully", "Success", JOptionPane.INFORMATION_MESSAGE);
            addEditor.dispose();
        }else
            JOptionPane.showMessageDialog(this, "Error: new editor not added!", "ERROR", JOptionPane.ERROR_MESSAGE);
    }

    // <ADD NEW BOOK> closes editor window
    private void cancel2ActionPerformed(java.awt.event.ActionEvent evt){
        addEditor.dispose();
    }

    // <ADD NEW BOOK> when BACK is pressed, shows the <MAIN BOOK> screen
    private void backNewBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backNewBookActionPerformed
        // TODO add your handling code here:
        jPanel.setVisible(false);
        bookMain.setVisible(true);
        cleanNewBook();
    }//GEN-LAST:event_backNewBookActionPerformed

    // <ADD NEW BOOK> when ADD is pressed, adds the new book to the database.
    // Shows an error message if something wrong happens.
    private void addNewBookBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addNewBookBActionPerformed
        // TODO add your handling code here:
        String nameb=TextField2.getText();
        String original=TextField3.getText();
        String sWriter=jomboBox2.getSelectedItem().toString();
        int id_wr = Integer.parseInt(db.consultWriter(url,driver, usuario,senha,sWriter));
        String sEd=jCoboBox3.getSelectedItem().toString();
        int id_ed= Integer.parseInt(db.consultEditor(url,driver, usuario,senha,sEd));
        String yearb=TextField4.getText();
        String pages=jTxtField5.getText();
        String sStab=ComboBox4.getSelectedItem().toString();
        int id_sta=Integer.parseInt(db.consultStatusB(url,driver, usuario,senha,sStab));
        int rateb=ComboBox5.getSelectedIndex();
        String sLocal=jomboBox6.getSelectedItem().toString();
        int local=Integer.parseInt(db.consultLocal(url,driver, usuario,senha,sLocal));
        String sGenreB=jCmboBox7.getSelectedItem().toString();
        int id_gr=Integer.parseInt(db.consultGenreB(url,driver, usuario,senha,sGenreB));
        String cover=TextField1.getText();
        if(db.generalUpdate(url, driver, usuario, senha,"insert into books (nm_book,ori_book,wr_book,gn_book,y_book,rt_book,ed_book,pages,sta_book,localization,cover) values('"+nameb+"','"+original+"','"+id_wr+"','"+id_gr+"','"+yearb+"','"+rateb+"','"+id_ed+"','"+pages+"','"+id_sta+"','"+local+"','"+cover+"');")){
            JOptionPane.showMessageDialog(this, "New book added succesfully", "Success", JOptionPane.INFORMATION_MESSAGE);
            if(commentDefined){
                System.out.println("Saving comment...");
                String id_book=db.getBookID(url, driver, usuario, senha,"select * from books where nm_book='"+nameb+"' AND wr_book='"+id_wr+"';");
                db.generalUpdate(url, driver, usuario, senha, "insert into comments values ('"+commentText+"',"+id_book+");");
                commentText="";
            }
            cleanNewBook();
        }else
            JOptionPane.showMessageDialog(this, "Error: new book not added!", "ERROR", JOptionPane.ERROR_MESSAGE);

    }//GEN-LAST:event_addNewBookBActionPerformed

    // <ADD NEW BOOK> when CLEAR is pressed, clear all the fields in <ADD NEW BOOK> screen
    private void cleanNewBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cleanNewBookActionPerformed
        // TODO add your handling code here:
        cleanNewBook();
    }//GEN-LAST:event_cleanNewBookActionPerformed

    // <ADD NEW BOOK> creates a new window where the name of a new genre can be written
    private void jBtton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtton11ActionPerformed
        // TODO add your handling code here:
        addGenreB = new JFrame();
        addGenreB.setBounds(250,250,300,150);
        JPanel pan3=new JPanel(new BorderLayout());
        JLabel lab3=new JLabel("Write name of genre to be added");
        txt3=new JTextField("", 100);

        JPanel pan31=new JPanel();
        pan31.add(ok3);
        pan31.add(cancel3);

        pan3.add(lab3, BorderLayout.NORTH);
        pan3.add(txt3, BorderLayout.CENTER);
        pan3.add(pan31, BorderLayout.SOUTH);

        addGenreB.add(pan3);

        addGenreB.setVisible(true);
        addGenreB.toFront();
    }//GEN-LAST:event_jBtton11ActionPerformed

    // <ADD NEW BOOK> creates a new window where a comment can be written
    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        addComment = new JFrame();
        addComment.setBounds(250,150,300,300);
        JPanel pan4=new JPanel(new BorderLayout());
        JLabel lab4=new JLabel("Write comment");
        txt4=new JTextArea("");

        JPanel pan41=new JPanel();
        pan41.add(ok4);
        pan41.add(cancel4);

        pan4.add(lab4, BorderLayout.NORTH);
        pan4.add(txt4, BorderLayout.CENTER);
        pan4.add(pan41, BorderLayout.SOUTH);

        addComment.add(pan4);

        addComment.setVisible(true);
        addComment.toFront();
    }//GEN-LAST:event_jButton7ActionPerformed

    // <ADD NEW BOOK> When OK is pressed, saves the value of comment in a variable
    // to be saved in the database when new book is added
    private void ok4ActionPerformed(java.awt.event.ActionEvent evt){
        commentText=txt4.getText();
        JOptionPane.showMessageDialog(this, "New comment saved", "Success", JOptionPane.INFORMATION_MESSAGE);
        commentDefined=true;
        addComment.dispose();
    }

    // <ADD NEW BOOK> closes comment window when CANCEL is pressed
    private void cancel4ActionPerformed(java.awt.event.ActionEvent evt){
        addComment.dispose();
    }

    // <ADD NEW BOOK> add genre to the genres database and, then, closes genres windows
    private void ok3ActionPerformed(java.awt.event.ActionEvent evt){
        String addGB=txt3.getText();
        if(db.generalUpdate(url, driver, usuario, senha,"insert into genreb (nm_genreb) values('"+addGB+"');")){
            resultGenreB.addElement(addGB);

            JOptionPane.showMessageDialog(this, "New genre added succesfully", "Success", JOptionPane.INFORMATION_MESSAGE);
            addGenreB.dispose();
        }else
            JOptionPane.showMessageDialog(this, "Error: new genre not added!", "ERROR", JOptionPane.ERROR_MESSAGE);
    }

    // <ADD NEW BOOK> closes genres window
    private void cancel3ActionPerformed(java.awt.event.ActionEvent evt){
        addGenreB.dispose();
    }




    /*
     * OTHER CONSTRUCTIONS
     */

    // <MENU ABOUT> shows a window with information about the software
    private void menuAboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuAboutActionPerformed
        // TODO add your handling code here:
        JFrame about=new JFrame();
        about.setBounds(250,150,300,300);

        JPanel panAbout=new JPanel();
        JLabel tAbout=new JLabel();
        tAbout.setText("Book&Movie Database");
        tAbout.setFont(new Font("Tahoma", Font.BOLD, 16));
        JLabel txtAbout=new JLabel();
        txtAbout.setBorder(BorderFactory.createLoweredBevelBorder());
        txtAbout.setText("<html><CENTER><br><br>  Version: 1.0.2 (beta)   <br><br><br>   Software by: Anezka Kolaceke   <br><br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nezka.slogowickt@gmail.com&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br><br><br></center></html>");
        JLabel endAbout=new JLabel();
        endAbout.setText("Thanks for using! =D");

        panAbout.add(tAbout, BorderLayout.NORTH);
        panAbout.add(txtAbout, BorderLayout.CENTER);
        panAbout.add(endAbout, BorderLayout.SOUTH);

        about.add(panAbout);

        panAbout.setVisible(true);
        about.setVisible(true);
    }//GEN-LAST:event_menuAboutActionPerformed



    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BookMovieDB.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BookMovieDB.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BookMovieDB.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BookMovieDB.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new BookMovieDB().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Button1;
    private javax.swing.JComboBox ComboBox4;
    private javax.swing.JComboBox ComboBox5;
    private javax.swing.JButton GFButton;
    private javax.swing.JLabel Label11;
    private javax.swing.JLabel Label12;
    private javax.swing.JLabel Label14;
    private javax.swing.JLabel Label15;
    private javax.swing.JLabel Label16;
    private javax.swing.JTextField TextField1;
    private javax.swing.JTextField TextField2;
    private javax.swing.JTextField TextField3;
    private javax.swing.JTextField TextField4;
    private javax.swing.JButton addBNewFilm;
    private javax.swing.JButton addNewBookB;
    private javax.swing.JPanel addNewFilm;
    private javax.swing.JButton bBackFilm;
    private javax.swing.JButton bEditFilm;
    private javax.swing.JButton bHomeFilm;
    private javax.swing.JButton bNextFilm;
    private javax.swing.JButton backNewBook;
    private javax.swing.JButton backNewFilm;
    private java.awt.Panel bookMain;
    private javax.swing.JButton cleanNewBook;
    private javax.swing.JButton cleanNewFilm;
    private javax.swing.JButton clearMainFilm;
    private javax.swing.JButton comf;
    private javax.swing.JTextArea commentF;
    private javax.swing.JComboBox counNewFilm;
    private javax.swing.JButton countryButton;
    private javax.swing.JButton dirButton;
    private javax.swing.JComboBox dirNewFilm;
    private java.awt.Panel filmMain;
    private javax.swing.JComboBox genreBook;
    private javax.swing.JComboBox genreNewFilm;
    private javax.swing.JButton jBtton11;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton7;
    private javax.swing.JComboBox jCmboBox7;
    private javax.swing.JComboBox jCoboBox3;
    private javax.swing.JComboBox jCombBox1;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JComboBox jComboBox3;
    private javax.swing.JComboBox jComboBox4;
    private javax.swing.JComboBox jComboBox5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLbel17;
    private javax.swing.JLabel jLbel19;
    private javax.swing.JLabel jLbel20;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPaneBooks;
    private javax.swing.JTextField jTxtField5;
    private javax.swing.JLabel jabel12;
    private javax.swing.JLabel jabel13;
    private javax.swing.JLabel jabel18;
    private javax.swing.JComboBox jomboBox2;
    private javax.swing.JComboBox jomboBox6;
    private javax.swing.JButton jutton6;
    private javax.swing.JButton jutton7;
    private javax.swing.JLabel labCoun;
    private javax.swing.JLabel labDir;
    private javax.swing.JLabel labEditor;
    private javax.swing.JLabel labGF;
    private javax.swing.JLabel labGenreB;
    private javax.swing.JLabel labLan;
    private javax.swing.JLabel labLocal;
    private javax.swing.JLabel labOLan;
    private javax.swing.JLabel labOriginal;
    private javax.swing.JLabel labPages;
    private javax.swing.JLabel labRT;
    private javax.swing.JLabel labRate;
    private javax.swing.JLabel labRateF;
    private javax.swing.JLabel labStatus;
    private javax.swing.JLabel labSubt;
    private javax.swing.JLabel labTitle;
    private javax.swing.JLabel labTitleF;
    private javax.swing.JLabel labWriter;
    private javax.swing.JLabel labYear;
    private javax.swing.JLabel labYearF;
    private javax.swing.JButton lanButton;
    private javax.swing.JComboBox lanNewFilm;
    private javax.swing.JMenuItem menuAbout;
    private javax.swing.JButton newBook;
    private javax.swing.JButton newFilm;
    private javax.swing.JButton oLanButton;
    private javax.swing.JComboBox olanNewFilm;
    private javax.swing.JPanel panelPicture;
    private javax.swing.JTextField posterNewFilm;
    private javax.swing.JComboBox rateNewFilm;
    private javax.swing.JComboBox ratingBook;
    private javax.swing.JComboBox ratingFilm;
    private javax.swing.JTextField rtNewFilm;
    private javax.swing.JButton searchFilm;
    private javax.swing.JButton searchFilmButton;
    private javax.swing.JButton showBack;
    private javax.swing.JPanel showBook;
    private javax.swing.JTextArea showComment;
    private javax.swing.JButton showEdit;
    private javax.swing.JPanel showFilm;
    private javax.swing.JButton showHome;
    private javax.swing.JButton showNext;
    private javax.swing.JButton subtButton;
    private javax.swing.JComboBox subtNewFilm;
    private javax.swing.JTextField titleBook;
    private javax.swing.JTextField titleFilm;
    private javax.swing.JTextField titleNewFilm;
    private javax.swing.JComboBox writer;
    private javax.swing.JTextField yearBook;
    private javax.swing.JTextField yearNewFilm;
    // End of variables declaration//GEN-END:variables

    BDAccess db=new BDAccess();

    DefaultComboBoxModel resultWriter;
    DefaultComboBoxModel resultGenreB;
    DefaultComboBoxModel resultEditor;
    DefaultComboBoxModel resultPlace;
    DefaultComboBoxModel resultStatusB;

    DefaultComboBoxModel resultDirector;
    DefaultComboBoxModel resultLanguage;
    DefaultComboBoxModel resultOLanguage;
    DefaultComboBoxModel resultCountry;
    DefaultComboBoxModel resultSubtitles;
    DefaultComboBoxModel resultGenreF;

    private JTextField txt1;
    private JFrame addWriter;
    private JTextField txt2;
    private JFrame addEditor;
    private JTextField txt3;
    private JFrame addGenreB;
    private JFrame addComment;
    private JTextArea txt4;
    private JFrame addDirector;
    private JTextField txtDir;
    private JFrame addLanguage;
    private JTextField txtLan;
    private JFrame addCountry;
    private JTextField txtCoun;
    private JFrame addSubt;
    private JTextField txtSubt;
    private JFrame addGF;
    private JTextField txtGF;
    private JFrame addCommentF;
    private JTextArea txtF;

    Image imagem;
    java.awt.image.ImageObserver imageObserver;
    Image image;

    String commentText;
    boolean commentDefined=false;
    String commentFText;
    boolean commentFDefined=false;
    String tBook="";
    boolean titleB=true;
    String gBook="";
    boolean genreB=true;
    String yBook="";
    boolean yearB=true;
    String rBook="";
    boolean ratingB=true;
    String wBook="";
    boolean writerB=true;
    String lBook="";
    boolean localB=true;
    String sBook="";
    boolean statusB=true;
    int nextB;

    String tFilm;
    boolean titleF=true;
    String dFilm;
    boolean dirF=true;
    String gFilm;
    boolean genreF=true;
    String lFilm;
    boolean languageF=true;
    String cFilm;
    boolean countryF=true;
    String rFilm;
    boolean rateFilm=true;
    int nextF=0;

    JButton ok1=new JButton("OK");
    JButton cancel1=new JButton("CANCEL");
    JButton ok2=new JButton("OK");
    JButton cancel2=new JButton("CANCEL");
    JButton ok3=new JButton("OK");
    JButton cancel3=new JButton("CANCEL");
    JButton ok4=new JButton("OK");
    JButton cancel4=new JButton("CANCEL");
    JButton okDir=new JButton("OK");
    JButton cancelDir=new JButton("CANCEL");
    JButton okLan=new JButton("OK");
    JButton cancelLan=new JButton("CANCEL");
    JButton okCoun=new JButton("OK");
    JButton cancelCoun=new JButton("CANCEL");
    JButton okSubt=new JButton("OK");
    JButton cancelSubt=new JButton("CANCEL");
    JButton okGF=new JButton("OK");
    JButton cancelGF=new JButton("CANCEL");
    JButton okF=new JButton("OK");
    JButton cancelF=new JButton("CANCEL");
    boolean showImage, showMessage;

    JFrame editFilm;
    JButton update=new JButton("Update");
    JButton editItem=new JButton("Edit");
    JButton cancelItem=new JButton ("Cancel");
    JComboBox item;

    JFrame updateValue;
    String par;
    int value;
    JButton cancelUpdate=new JButton("Cancel");

    JComboBox combo;
    JTextField text;
    JTextArea area;
    JButton editSearch=new JButton("Search");
    String table;

    JFrame editBook;
    JButton updateb=new JButton("Update");
    JButton editItemb=new JButton("Edit");
    JButton cancelItemb=new JButton ("Cancel");
    JComboBox itemb;

    JFrame updateValueb;
    String parb;
    int valueb;
    JButton cancelUpdateb=new JButton("Cancel");

    JComboBox combob;
    JTextField textb;
    JTextArea areab;
    JButton editSearchb=new JButton("Search");
    String tableb;

    boolean up;
    String nameFilm;
    String nameBook;
    String pageBook;
    String directorFilm;
}
